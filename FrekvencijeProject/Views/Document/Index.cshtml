@{
    bool showDiv = (Model != null); // Set this value based on your condition
}
@inject FrekvencijeProject.Controllers.DocumentController documentService
@model IEnumerable<FrekvencijeProject.Models.Json.DocumentStandardView>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js">
</script>
<head>
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
    </style>
</head>

<script type="text/javascript">
    var DocString = "";
    function LinkClick() {
        //alert('Does this work?'+e);
        //var value = '(OR) Off - Route <br/>(R) Route <br/> 1800  Global System for Mobile Communications using 1800 MHz band<br/>ADS Automatic Dependant Surveillance(Aeronautical)<br/>AES Aircraft Earth Stations<br/>AGA Air Ground Air<br/>';

        //value += 'AIS  Automatic Identification System<br/>';
        //value += 'ALS  Assistive Listening Systems<br/>';
        //value += 'AM   Amplitude Modulation<br/>';
        //value += 'AMRD Autonomous Maritime Radio Device<br/>';
        //value += 'AMS(R)S Aeronautical Mobile Satellite(Route) Services<br/>';
        //value += 'APP  Appendix of the ITU Radio Regulations<br/>';
        //value += 'ASDE Airport Surface Detection Equipment<br/>';
        //value += 'AVI  Automatic Vehicle Idenfication<br/>';
        //value += 'BBDR Broad Band Disaster Relief<br/>';
        //value += 'BFWA Broadband Fixed Wireless Access<br/>';
        //value += 'BMA  Building Material Analysis<br/>';
        //value += 'BSS  Broadcasting Satellite Service<br/>';
        //value += 'CB   Citizen Band<br/>';
        //value += 'CEPT European Conference of Postal and Telecommunications Administrations<br/>';
        //value += 'CGC  Complementary Ground Component<br/>';
        //value += 'CRS  Central Radio Station<br/>';
        //value += 'CT  Cordless Telephone<br/>';
        //value += 'DA2GC Direct Air - to - Ground Communications<br/>';
        //value += 'DEC   Decision<br/>';
        //value += 'DECT  Digital Enhanced Cordless Telecommunication<br/>';
        //value += 'D - GPS Differential Global Positioning System<br/>';
        //value += 'DME Distance Measuring Equipment<br/>';
        //value += 'DMO Direct Mode Operation<br/>';
        //value += 'DRM Digital Radio Mondiale<br/>';
        //value += 'DSC Digital Selective Calling<br/>';
        //value += 'DSI Detailed Spectrum Investigation<br/>';
        //value += 'DVB - T Terrestrial Digital Video Broadcasting<br/>';
        //value += 'E / s   Earth - to - space direction<br/>';
        //value += 'ECA     European Common Allocation<br/>';
        //value += 'ECC Electronic Communications Committee<br/>';
        //value += 'ECM Electronic Countermeasures<br/>';
        //value += 'ECP European Common Proposal<br/>';
        //value += 'EESS Earth Exploration - Satellite Service<br/>';
        //value += 'EFIS European Frequency Information System<br/>';
        //value += 'EGSM Extended GSM<br/>';
        //value += 'EISCAT European Incoherent SCATter facility<br/>';
        //value += 'ELT Emergency locator transmitter<br/>';
        //value += 'ENG Electronic News Gathering<br/>';
        //value += 'EPIRB Emergency Position - Indicating Radiobeacon<br/>';
        //value += 'ERC European Radiocommunications Committee<br/>'
        //value += 'ERO European Radiocommunications Office<br/>';
        //value += 'ESIM Earth Stations In Motion<br/>';
        //value += 'ESOMPs Earth Stations On Mobile Platforms<br/>';
        //value += 'EST Earth Stations on Trains<br/>';
        //value += 'ESV Earth Stations on - board Vessels<br/>';
        //value += 'EU European footnote<br/>';
        //value += 'FDD Frequency Division Duplex<br/>';
        //value += 'FM  Frequency Modulation<br/>';
        //value += 'FSS Fixed - Satellite Service<br/>';
        //value += 'FWA Fixed Wireless Access<br/>';
        //value += 'GALILEO European Global Navigation Satellite System<br/>';
        //value += 'GBAS Ground Based Augmentation System<br/>';
        //value += 'GBSAR Ground Based Synthetic Aperture Radar<br/>';
        //value += 'GE06 Geneva 2006 Agreement<br/>';
        //value += 'GE75 Geneva 1975 Agreement<br/>';
        //value += 'GE85 Geneva 1985 Agreement<br/>';
        //value += 'GLONASS Global Navigation Satellite System<br/>';
        //value += 'GMDSS   Global Maritime Distress and Safety System<br/>';
        //value += 'GNSS    Global Navigation Satellite System<br/>';
        //value += 'GPR / WPR  Ground Probing Radar / Wall Probing Radar<br/>';
        //value += 'GPS  Global Positioning System<br/>';
        //value += 'GSM  Global System for Mobile Communications<br/>';
        //value += 'GSM 1800  Global System for Mobile Communications using 1800 MHz band<br/>';
        //value += 'GSM - R   GSM for Railways<br/>';
        //value += 'GSO       GeoStationary Orbit<br/>';
        //value += 'HAPS      High Altitude Platform Systems<br/>';
        //value += 'HDFS      High Density Fixed Service<br/>';
        //value += 'HDFSS     High Density Fixed - Satellite Service<br/>';
        //value += 'HDTV      High Definition Television<br/>';
        //value += 'HEST      High E.i.r.p.Satellite Terminals<br/>';
        //value += 'HF        High Frequency<br/>';
        //value += 'HIPERLAN  High Performance Radio Local Area Network<br/>';
        //value += 'IALA      International Association of Lighthouse Authorities<br/>';
        //value += 'IBCN      Integrated Broadband Communications Network<br/>';
        //value += 'IFF       Identification Friend or Foe<br/>';
        //value += 'ILS       Instrument Landing System<br/>';
        //value += 'IMO       International Maritime Organisation<br/>';
        //value += 'IMT       International Mobile Telecommunications<br/>';
        //value += 'IMT - 2000 International Mobile Telecommunications - 2000<br/>';
        //value += 'IMT - Advanced Systems beyond IMT - 2000<br/>';
        //value += 'IoT   Internet of Things<br/>';
        //value += 'ISM   Industrial, Scientific and Medical<br/>';
        //value += 'ITS   Intelligent Transport Systems<br/>';
        //value += 'ITU   International Telecommunication Union<br/>';
        //value += 'JTIDS Joint Tactical Information Distribution System<br/>';
        //value += 'LAES  Location Application for Emergency Services<br/>';
        //value += 'LANs  Local Area Networks<br/>';
        //value += 'LDC   Low Duty Cycle<br/>';
        //value += 'LEST  Low E.i.r.p.Satellite Terminals<br/>';
        //value += 'LP - AMI  Low Power Active Medical Implants<br/>';
        //value += 'LPR       Level Probing Radar<br/>';
        //value += 'LT2       Location Tracking Type 2<br/>';
        //value += 'MBANS     Medical Body Area Network Systems<br/>';
        //value += 'MBR       Maritime Broadband Radio Links<br/>';
        //value += 'MCA       Mobile Communications Services on Board Aircraft<br/>';
        //value += 'MCV       Mobile Communication Services on Board Vessels<br/>';
        //value += 'MES       Mobile Earth Stations<br/>';
        //value += 'MFCN      Mobile / Fixed Communications Networks<br/>';
        //value += 'MIDS      Multifunctional Information Distribution System<br/>';
        //value += 'MLS       Microwave Landing System<br/>';
        //value += 'MSI       Maritime Safety Information<br/>';
        //value += 'MSS       Mobile - Satellite Service<br/>';
        //value += 'MWS       Multimedia Wireless System<br/>';
        //value += 'NATO      North Atlantic Treaty Organisation<br/>';
        //value += 'NAVTEX    Narrow - band direct - printing telegraphy system for transmission of navigational and meteorological warnings and urgent information to ships<br/>';
        //value += 'NDB       Non - Directional Beacon<br/>';
        //value += 'NGSO      Non - GeoStationary Orbit<br/>';
        //value += 'NJFA      NATO Joint Civil / Military Frequency Agreement<br/>';
        //value += 'NMR       Nuclear Magnetic Resonance<br/>';
        //value += 'OB        Outside Broadcasting<br/>';
        //value += 'PAMR      Public Access Mobile Radio<br/>';
        //value += 'PKO       Peace Keeping Operations<br/>';
        //value += 'PLB       Personal Locator Beacons<br/>';
        //value += 'PMR       Professional Mobile Radio, Private Mobile Radio<br/>';
        //value += 'PMSE      Programme Making and Special Events<br/>';
        //value += 'POCSAG    Post Office Code Standards Advisory Group<br/>';
        //value += 'PPDR      Public Protection and Disaster Relief<br/>';
        //value += 'PWAP      Private Wide Area Paging<br/>';
        //value += 'RA        Radio Astronomy<br/>';
        //value += 'REC       Recommendation<br/>';
        //value += 'RFID      Radio Frequency Identification<br/>';
        //value += 'RLAN      Radio Local Area Network System<br/>';
        //value += 'RR        ITU Radio Regulations<br/>';
        //value += 'RTE       Radar Target Enhancer<br/>';
        //value += 'RTTT      Road Transport & Traffic Telematics<br/>';
        //value += 's / E     space - to - Earth direction<br/>';
        //value += 'SAB       Services Ancillary to Broadcasting<br/>';
        //value += 'SAP       Services Ancillary to Programming<br/>';
        //value += 'SAR(communications)       Search and Rescue<br/>';
        //value += 'SIT                       Satellite Interactive Terminal<br/>';
        //value += 'SNG                       Satellite News Gathering<br/>';
        //value += 'S - PCS                   Satellite Personal Communication System<br/>';
        //value += 'SRD                       Short Range Device<br/>';
        //value += 'SRR                       Short Range Radar<br/>';
        //value += 'SRS                       Space Research Service<br/>';
        //value += 'SSR                       Secondary Surveillance Radar<br/>';
        //value += 'SUT                       Satellite User Terminal<br/>';
        //value += 'TACAN                     Tactical Air Navigation<br/>';
        //value += 'T - DAB                   Terrestrial Digital Audio Broadcasting<br/>';
        //value += 'TDD                       Time Division Duplex<br/>';
        //value += 'TETRA                     Terrestrial Trunked Radio<br/>';
        //value += 'TLPR                      Tank Level Probing Radar<br/>';
        //value += 'TRR                       Tactical Radio Relays<br/>';
        //value += 'TS                        Terminal Station<br/>';
        //value += 'TTT                       Transport and Traffic Telematics<br/>';
        //value += 'TV                        Television<br/>';
        //value += 'UIC                       International Union for Railways<br/>';
        //value += 'ULP - AID                 Ultra Low Power Animal Implants Devices<br/>';
        //value += 'ULP - AMI                 Ultra Low Power Active Medical Implants<br/>';
        //value += 'ULP - MMI                 Ultra Low Power Medical Membrane Implants<br/>';
        //value += 'ULP - WMCE                Ultra - Low Power Wireless Medical Capsule Endoscopy<br/>';
        //value += 'UMTS                      Universal Mobile Telecommunications System<br/>';
        //value += 'UWB                       Ultra – Wideband<br/>';
        //value += 'VDB                       VHF ground - air Data Broadcast<br/>';
        //value += 'VLBI                      Very Long Baseline Interferometry(Radio Astronomy)<br/>';
        //value += 'VOR                       VHF Omni - directional Range<br/>';
        //value += 'VSAT                      Very Small Aperture Terminal<br/>';
        //value += 'VTS                       Vessel Traffic System(radar)<br/>';
        //value += 'WAIC                      Wireless Avionics Intra - Communication systems<br/>';
        //value += 'WARC                      World Administrative Radio Conference<br/>';
        //value += 'WAS                       Wireless Access System<br/>';
        //value += 'WIA                       Wireless Industrial Applications<br/>';
        var value = 'ADS    Automatic Dependant Surveillance (Aeronautical)<br/>';
        value += 'AES	    Aircraft Earth Station<br/>';
        value += 'AGA       Air-Ground-Air<br/>';
        value += 'AIS	    Universal Shipborne Automatic Identification System<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'AM	    Amplitude Modulation<br/>';
        value += 'AMRD	    Autonomous Maritime Radio Device<br/>';
        value += 'ALD	    Assistive Listening Devices<br/>';
        value += 'ASDE	    Airport Surface Detection Equipment<br/>';
        value += 'BBDR	    Broad Band Disaster Relief<br/>';
        value += 'BFWA	    Broadband Fixed Wireless Access<br/>';
        value += 'BWA	    Broadband Wireless Access<br/>';
        value += 'CB	    Citizens Band<br/>';
        value += 'CGC	    Complementary Ground Component<br/>';
        value += 'CT	    Cordless Telephone<br/>';
        value += 'DA2GC	    Direct Air-to-Ground Communications<br/>';
        value += 'DECT	    Digital Enhanced Cordless Telecommunications<br/>';
        value += 'D-GPS	    Differential Global Positioning System<br/>';
        value += 'DME	    Distance Measuring Equipment<br/>';
        value += 'DRM	    Digital Radio Mondiale<br/>';
        value += 'DSC	    Digital Selective Calling<br/>';
        value += 'DVB-T	    Digital Video Broadcasting – Terrestrial<br/>';
        value += 'ELT	    Emergency locator transmitter<br/>';
        value += 'ENG/OB	Electronic News Gathering / Outside Broadcasting<br/>';
        value += 'EPIRBs	Emergency Position Indicating Radio Beacons<br/>';
        value += 'ESIM	    Earth Stations In-Motion<br/>';
        value += 'ESOMPs	Earth Stations On Mobile Platforms<br/>';
        value += 'ESV	    Earth Stations on-board Vessels<br/>';
        value += 'FM	    Frequency Modulation<br/>';
        value += 'FRMCS	    Future Railway Mobile Communication System<br/>';
        value += 'FSS	    Fixed-Satellite Service<br/>';
        value += 'FWA	    Fixed Wireless Access<br/>';
        value += 'GBAS	    Ground Based Augmentation System<br/>';
        value += 'GBSAR	    Ground Based Synthetic Aperture Radar<br/>';
        value += 'GLONASS	Globalnaya Navigatsionnaya Sputnikovaya Sistema<br/>';
        value += 'GMDSS	    Global Maritime Distress and Safety System<br/>';
        value += 'GNSS	    Global Navigation Satellite System<br/>';
        value += 'GNSS      Pseudolites	Global Navigation Satellite System Pseudolites<br/>';
        value += 'GPR	    Ground Probing Radar<br/>';
        value += 'GPS	    Global Positioning System<br/>';
        value += 'GSM	    Global System for Mobile Communications<br/>';
        value += 'GSM-R	    Global System for Mobile Communications on Railways<br/>';
        value += 'GSO	    GeoStationary Orbit<br/>';
        value += 'HAPS	    High Altitude Platform Station<br/>';
        value += 'HEST	    High e.i.r.p. Satellite Terminal<br/>';
        value += 'IFF	    Identification Friend or Foe<br/>';
        value += 'ILS	    Instrument Landing System<br/>';
        value += 'IMT-2000	International Mobile Telecommunications-2000<br/>';
        value += 'IMT-Advanced	Systems beyond IMT-2000<br/>';
        value += 'IMT	    International Mobile Telecommunications (includes IMT-2000 and IMT-Advanced<br/>';
        value += 'ISM	    Industrial, Scientific and Medical applications<br/>';
        value += 'ITS	    Intelligent Transport Systems<br/>';
        value += 'JTIDS	    Joint Tactical Information Distribution System<br/>';
        value += 'LAES	    Location Application for Emergency Services<br/>';
        value += 'LANs	    Local Area Networks<br/>';
        value += 'LEST	    Low e.i.r.p. Satellite Terminal<br/>';
        value += 'LP-AMI	Low Power Active Medical Implants<br/>';
        value += 'LPD	    Low Power Device<br/>';
        value += 'LPR	    Level Probing Radar<br/>';
        value += 'LT2	    Location Tracking Type 2<br/>';
        value += 'MBANS	    Medical Body Area Network System<br/>';
        value += 'MBR	    Maritime Broadband Radio<br/>';
        value += 'MCA	    Mobile Communications on Board Aircraft<br/>';
        value += 'MCV	    Mobile Communication Services on Board Vessels<br/>';
        value += 'MFCN	    Mobile/Fixed Communications Networks<br/>';
        value += 'MLS	    Microwave Landing System<br/>';
        value += 'MSI	    Maritime Safety Information<br/>';
        value += 'MSS	    Mobile-Satellite Service<br/>';
        value += 'MWS	    Multimedia Wireless System<br/>';
        value += 'NAVTEX	Narrow-band direct-printing telegraphy system for transmission of navigational and meteorological warnings and urgent information to ships<br/>';
        value += 'NGSO	    Non-GeoStationary Orbit<br/>';
        value += 'NMR	    Nuclear Magnetic Resonance applications<br/>';
        value += 'NP2M	    Narrowband Point to Multipoint system<br/>';
        value += 'PAMR	    Public Access Mobile Radio<br/>';
        value += 'PLB	    Personal Locator Beacon<br/>';
        value += 'PMR	    Private (Professional) Mobile Radio<br/>';
        value += 'PMSE	    Programme Making and Special Events<br/>';
        value += 'POCSAG	Post Office Code Standards Advisory Group<br/>';
        value += 'PPDR	    Public Protection & Disaster Relief<br/>';
        value += 'RFID	    Radio Frequency Identification<br/>';
        value += 'RLAN	    Radio Local Area Network<br/>';
        value += 'RMR	    Railway Mobile Radio<br/>';
        value += 'RTE	    Radar Target Enhancer<br/>';
        value += 'SAB	    Service Ancillary to Broadcasting<br/>';
        value += 'SAP	    Service Ancillary to Programme making<br/>';
        value += 'SAR 	    Search and Rescue<br/>';
        value += 'SATCOM	Satellite Communication<br/>';
        value += 'SIT/SUT	Satellite Interactive Terminal / Satellite User Terminal<br/>';
        value += 'SNG	    Satellite News Gathering<br/>';
        value += 'S-PCS	    Satellite - Personal Communications System<br/>';
        value += 'SRD	    Short Range Devices<br/>';
        value += 'SRR	    Short Range Radars<br/>';
        value += 'SSR	    Secondary Surveillance Radar<br/>';
        value += 'TACAN	    Tactical Air Navigation<br/>';
        value += 'T-DAB	    Terrestrial Digital Audio Broadcasting<br/>';
        value += 'TETRA	    Terrestrial Trunked Radio<br/>';
        value += 'TETRAPOL	Digital PMR technology<br/>';
        value += 'TLPR	    Tank Level Probing Radar<br/>';
        value += 'TRA-ECS	Terrestrial radio applications capable of providing electronic communications services<br/>';
        value += 'TTT	    Transport and Traffic Telematics<br/>';
        value += 'TV	    Television<br/>';
        value += 'UAS	    Unmanned Aircraft System<br/>';
        value += 'ULP-AMI	Ultra Low Power Active Medical Implants<br/>';
        value += 'ULP-AID	Ultra Low Power Animal Implants Devices<br/>';
        value += 'ULP-MMI	Ultra Low Power Medical Membrane Implants<br/>';
        value += 'ULP-WMCE	Ultra-Low Power Wireless Medical Capsule Endoscopy<br/>';
        value += 'VLBI	    Very Long Baseline Interferometry<br/>';
        value += 'VOR	    VHF Omnidirectional Radio Range<br/>';
        value += 'VSAT	    Very Small Aperture Terminal<br/>';
        value += 'UWB	    Ultra Wideband<br/>';
        value += 'WAIC	    Wireless Avionics Intra-Communications systems<br/>';
        value += 'WIA	    Wireless Industrial Applications<br/>';
        value += 'WPR	    Wall Probing Radar<br/>';
        value += 'WPT	    Wireless Power Transmission<br/>';


        //$('#btnfoot').trigger('click');
        showModal("Application abbreviations", "<p>" + value + "</p>");

    }


    function InputAction(e) {

        var evt = (e) ? e : window.event;
        var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
        //if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        //    alert("You pressed a key inside the input field");
        //    return false;
        //}
        if (charCode == 144 || charCode == 12 || charCode == 8) {
            return true;
        }
        if ((charCode >= 96 && charCode <= 105) || (charCode >= 48 && charCode <= 57)) {
            return true;
        } else {
            return false;
            //alert("You pressed a key inside the input field");
        }

    }

    function SearchNow() {
        //alert("Works");
        var div = document.getElementById("print_div");
        div.style.display = "block";
        var SearchByValues = false;
        if ($('#application_first_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');

                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_first_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 1,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }


                                    items += "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });

                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
        }

        if ($('#application_second_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');

                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_second_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 2,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }
                                    items +=
                                        "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });



                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
            }

        if ($('#application_third_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');

                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_third_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 3,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }

                                    items +=
                                        "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });
                } else {
                     $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                }
        }
        if (SearchByValues == false) {
            $("#frequency_table :selected").each(function () {
                if ($('#all_document_type').val() != '1') {

                   // alert('pozvao');
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val());
                    if (isNaN(number1) && isNaN(number2)) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchAllDocType")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name="demo"]:checked').val(),
                                AbbrValue: $('input[name="abbreviation"]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchDocumentByType")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name="demo"]:checked').val(),
                                AbbrValue: $('input[name="abbreviation"]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                } else {
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val());
                    if (isNaN(number1) && isNaN(number2)) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchAllDoc")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchDocument")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                }
            });
        }

    }

    function PresentNotes(element) {
        //alert("ppp:");
        showModal("Notes", element);
    }

    function showModal(titleHtml, contentHtml) {
        const modal = document.createElement("div");
        //const modal = document.getElementById("tempModal");

        modal.classList.add("modal_u_app");
        modal.innerHTML = `
        <div class="modal__inner">
            <div class="modal__top">
                <div class="modal__title">${titleHtml}</div>
                <button class="modal__close" type="button">
                    <span class="material-icons">close</span>
                </button>
            </div>
            <div class="modal__content">${contentHtml}</div>
            <div class="modal__bottom"></div>
        </div>`;

        modal.querySelector(".modal__close").addEventListener("click", () => {
            document.body.removeChild(modal);
        });

        document.body.appendChild(modal);

    }

    function FirstChange() {
        //alert("Works");
        if ($('#application_first_value').val() != '1') {
            $('#application_second_value').val('1').change();
            $('#application_third_value').val('1').change();
        }
    }

    function SecondChange() {
        //alert("Works");
        if ($('#application_second_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_third_value').val('1').change();

        }
    }

    function ThirdChange() {
        //alert("Works");
        if ($('#application_third_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_second_value').val('1').change();

        }
    }



    function handleChange(src) {
        //alert(src.value);
        if (src.value == 'R') {
            $("#all_document_type").empty();
            var o = new Option("<all document types - regulatory and informative documents>", "1");

            //$(o).html("< all document types - regulatory and informative documents >");
            $("#all_document_type").append(o);
            var o2 = new Option("ECC Decs/Recs", "2");

            //$(o2).html("ECC Decs/Recs");
            $("#all_document_type").append(o2);
            var o3 = new Option("Harmonised standards", "3");

            //$(o3).html("Harmonised standards");
            $("#all_document_type").append(o3);
            var o4 = new Option("Licensing info", "4");

            //$(o4).html("Licensing info");
            $("#all_document_type").append(o4);
            var o5 = new Option("NTFA", "5");

            //$(o5).html("NTFA");
            $("#all_document_type").append(o5);

            var o6 = new Option("Other", "6");

            //$(o6).html("Other");
            $("#all_document_type").append(o6);

            var o7 = new Option("RE subclass", "7");

            //$(o7).html("Other");
            $("#all_document_type").append(o7);

            var o8 = new Option("RIS Models", "8");

            //$(o8).html("RIS Models");
            $("#all_document_type").append(o8);


        } else {
            $("#all_document_type").empty();
            var o = new Option("<all document types - regulatory and informative documents>", "1");

            //$(o).html("< all document types - regulatory and informative documents >");
            $("#all_document_type").append(o);
            var o2 = new Option("ECC-ECO", "2");

            //$(o2).html("ECC-ECO");
            $("#all_document_type").append(o2);
            var o3 = new Option("National", "3");

            //$(o3).html("National");
            $("#all_document_type").append(o3);
            var o4 = new Option("Third party", "4");

            //$(o4).html("Third party");
            $("#all_document_type").append(o4);

        }
    }


    //function ValueOnChange(temp) {
    //    var selectedText = $("#app_all").find("option:selected").text();

    //    //alert("Works" + temp.value + "text" + selectedText);
    //    if (selectedText.indexOf(" ") >= 0) {
    //        var variable2 = selectedText.substring(0, 3);
    //        // alert("varijable:" + variable2 + ":==");
    //        if ((/\s/).test(variable2)) {
    //            //   alert("String Found:" + variable2 + ":==");
    //            var shiftText = selectedText.substring(3, selectedText.length);
    //            //alert("String Found:" + shiftText + ":==");
    //            $('#app_all option[value="' + temp + '"]').html(shiftText);
    //            //$("#app_all").text();
    //        }

    //    }

    //}


    function handleChangeAppAll(src) {
        if (src.value == 'Hierarchical') {
           // $("#app_all").empty();
           // var values = $("#app_all");
           //// var groupAeronauticalNavigation = $("<optgroup label='Aeronautical navigation'/>");
           // $("<option value=\"6\" class=\"optionGroup\"/>").text("Aeronautical navigation").appendTo(values);
           // //$("<option value=\"7\" class=\"optionChild\"/>").text("    ").appendTo(values);
           // values.append($('<option>', {
           //     value: "7",
           //     html: "&nbsp;&nbsp;&nbsp;Airborne doppler navigation aids"
           // }));

           // values.append($('<option>', {
           //     value: "8",
           //     html: "&nbsp;&nbsp;&nbsp;Airborne weather radar"
           // }));


           // $("<option value=\"9\" class=\"optionChild\"/>").text("Altimeters").appendTo(values);
           // $("<option value=\"10\" class=\"optionChild\"/>").text("ASDE").appendTo(values);
           // $("<option value=\"11\" class=\"optionChild\"/>").text("Beacons (aeronautical)").appendTo(values);
           // $("<option value=\"12\" class=\"optionChild\"/>").text("DME").appendTo(values);
           // $("<option value=\"13\" class=\"optionChild\"/>").text("ILS").appendTo(values);
           // $("<option value=\"14\" class=\"optionChild\"/>").text("Loran C").appendTo(values);
           // $("<option value=\"15\" class=\"optionChild\"/>").text("MLS").appendTo(values);
           // $("<option value=\"16\" class=\"optionChild\"/>").text("SAR (navigation)").appendTo(values);
           // $("<option value=\"17\" class=\"optionChild\"/>").text("VOR").appendTo(values);
           // $("<option value=\"18\" class=\"optionChild\"/>").text("GBAS").appendTo(values);

            //$("<option value=\"6\" />").text("Aeronautical navigation").appendTo(values);
            //$("<option value=\"7\" />").text("Airborne doppler navigation aids").appendTo(values);
            //$("<option value=\"8\" />").text("Airborne weather radar").appendTo(values);
            //$("<option value=\"9\" />").text("Altimeters").appendTo(values);
            //$("<option value=\"10\" />").text("ASDE").appendTo(values);
            //$("<option value=\"11\" />").text("Beacons (aeronautical)").appendTo(values);
            //$("<option value=\"12\" />").text("DME").appendTo(values);
            //$("<option value=\"13\" />").text("ILS").appendTo(values);
            //$("<option value=\"14\" />").text("Loran C").appendTo(values);
            //$("<option value=\"15\" />").text("MLS").appendTo(values);
            //$("<option value=\"16\" />").text("SAR (navigation)").appendTo(values);
            //$("<option value=\"17\" />").text("VOR").appendTo(values);
            //$("<option value=\"18\" />").text("GBAS").appendTo(values);

           // groupAeronauticalNavigation.appendTo(values);
             $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByHierarchical")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#app_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#app_all").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#app_all");
                                        if (generalTemp.name == "<all application terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + generalTemp.Number,
                                                html: "all application terms"
                                            }));
                                           
                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));

                                            } else {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });


        } else {
            $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByAlphabetical")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#app_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#app_all").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#app_all");
                                        if (generalTemp.name == "<all application terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "all application terms"
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "<p>" + generalTemp.name + "</p>"
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });

        }
    }

    $(function () {
        $('#download_pdf').click(function () {
            var selected = $("#frequency_table :selected").map((_, e) => e.value).get();
            $.ajax({
                type: "POST",
                url: "@Url.Action("DownloadPDF", "AllocationSearch")",
                data: {
                    AllVal1: $('#allocation_first_value').val(),
                    AllVal2: $('#allocation_two_value').val(),
                    AllVal3: $('#allocation_third_value').val(),
                    AllVal4: $("#allocation_fourth_value option:selected").text(),
                    FromVal: $('#from').val(),
                    ToVal: $('#to').val(),
                    FrequencySizeVal: $('#frequencySize').val(),
                    FreqTable: $("#frequency_table option:selected").text(),
                    FreqTableVal: selected
                },
                responseType: 'arraybuffer',
                success: function (response) {

                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'pdf' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.pdf';

                    // Programmatically trigger the download
                    link.click();


                },
                failure: function (response) {
                    alert("Failure: An error occurred while making the AJAX request.");
                },
                error: function (response) {
                    alert("Error: An error occurred while making the AJAX request.");
                }
            });
        });

        $('#download_excel').click(function () {
            var selected = $("#frequency_table :selected").map((_, e) => e.value).get();

            $.ajax({
                type: "POST",
                url: "@Url.Action("DownloadExcel", "AllocationSearch")",
                data: {
                    AllVal1: $('#allocation_first_value').val(),
                    AllVal2: $('#allocation_two_value').val(),
                    AllVal3: $('#allocation_third_value').val(),
                    AllVal4: $("#allocation_fourth_value option:selected").text(),
                    FromVal: $('#from').val(),
                    ToVal: $('#to').val(),
                    FrequencySizeVal: $('#frequencySize').val(),
                    FreqTable: $("#frequency_table option:selected").text(),
                    FreqTableVal: selected
                },
                responseType: 'arraybuffer',
                success: function (response) {
                    // Create a Blob from the response data
                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.xlsx';

                    // Programmatically trigger the download
                    link.click();
                },
                failure: function (response) {
                    alert("Failure: An error occurred while making the AJAX request.");
                },
                error: function (response) {
                    alert("Error: An error occurred while making the AJAX request.");
                }
            });
        });
    });



</script>

<body id="content_container_body">
    <div class="centerpanel">
        <div class="left">Documents</div>
        <div class="right">
            <img src="~/images/Palestina.png" width="80px" height="50px" />
        </div>
    </div>

    <br/>

    <div style="background-color: white; width: 70%; margin-top: 30px; padding-top:30px;" class="center">
        <br />
        <div class="form-group center_top_menu" style="width: 90%; height:100%">
            <label id="search_by" style="width:150px; font-weight: bold; font-family: Roboto; font-size: 13px; height: 35px" asp-for="@documentService.Frequency"></label>
            <p> &nbsp &nbsp</p>
            <input id="from" aria-label="From" class="form-control text-box single-line"
                   data-val-maxlength-max="30" asp-for="@documentService.From" value="@TempData["fromTempValue"]"
                   style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;" placeholder="From" type="number" onkeydown="return  InputAction(event)" />
            <p> &nbsp &nbsp</p>
            <input id="to" aria-label="To" class="form-control text-box single-line"
                   data-val-maxlength-max="30" asp-for="@documentService.To" value="@TempData["toTempValue"]"
                   style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;" placeholder="To" type="number" onkeydown="return  InputAction(event)" />
            <p> &nbsp &nbsp</p>
            @if (Model != null)
            {
                @if (Model.Count() > 0)
                {

                    <select id="frequencySize" style="width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@documentService.FrequencySizeValue" asp-items="@ViewBag.FreqSize" >
                    </select>

                }


            }
            else
            {
                <select id="frequencySize" style="width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@documentService.FrequencySizeValue" asp-items="@documentService.FrequencySizesList">
                </select>
            }


            @*<select id="frequencySize" style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@documentService.FrequencySizeValue" asp-items="@documentService.FrequencySizesList">
            </select>*@
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px">Document type</label>
            <p> &nbsp &nbsp</p>
            <div class="typeDoc">
                <input type="radio" name="demo" onchange="handleChange(this);" value="R"/> Regulatory
                <input type="radio" name="demo" onchange="handleChange(this);" value="I"/> Informative documents
            </div>
               

            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">

                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                <select id="all_document_type" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                        asp-for="@documentService.AllDocumentTypesValue">
                    <option value="1">&lt;all document types - regulatory and informative documents &gt;</option>
                </select>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">

                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px">Application</label>
                <p> &nbsp &nbsp</p>
                <select id="application_first_value" onchange="FirstChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                        asp-for="@documentService.ApplicationFirstValue" asp-items="@documentService.ApplicationFirstList">
                </select>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">

                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                <select id="application_second_value" onchange="SecondChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                        asp-for="@documentService.ApplicationSecondValue" asp-items="@documentService.ApplicationSecondList">
                </select>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">

                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                <select id="application_third_value"  onchange="ThirdChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                        asp-for="@documentService.ApplicationThirdValue" asp-items="@documentService.ApplicationThirdList">
                </select>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">

                <label id="search_by" style="font-weight:bold; font-family:Roboto; font-size:13px;  width:150px;"></label>
                <p>&nbsp &nbsp</p>
                <input type="checkbox" id="selectedLevel" name="selectedLevel">
                <label for="selectedLevel" style="font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;"> Search only in the selected level</label>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:80%; height: 35px; text-align: center;">-or-</label>
            </div>
            <div class="center_top_menu" style="width: 50%; height:100%">
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                <div class="typeHierra">
                    <input type="radio" name="hierarc" onchange="handleChangeAppAll(this);" value="Hierarchical" /> Hierarchical
                    <input type="radio" name="hierarc" onchange="handleChangeAppAll(this);" value="Alphabetical" /> Alphabetical
                </div>
                    <p> &nbsp &nbsp</p>
                    <div id="abbr"><a href="#" onClick="LinkClick(); return false;">Abbreviations</a></div>
            </div>

            <div class="center_top_menu" style="width: 50%; height:100%">
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
                <p> &nbsp &nbsp</p>
                @*onchange="ValueOnChange(this);" *@
                <select id="app_all" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid; border-width: 3px; "
                        asp-for="@documentService.ApplicationAllValue" >
                    <option value="1">&lt;all application terms &gt;</option>
                </select>
            </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:150px" name="FrequencytableValue" asp-for="@documentService.FrequencyTable"></label>
            <p>&nbsp &nbsp</p>

            @*<select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                    asp-for="@documentService.FrequencytableValue" asp-items="@documentService.FrequencyTablesList" class="form-control" size="8">
            </select>*@

                @if (Model != null)
                {
                    @if (Model.Count() > 0)
                    {
                        <select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                                asp-for="@documentService.FrequencytableValue" asp-items="Model.ElementAt(0).FrequencyTablesList" class="form-control" size="8">
                        </select>
                    }
                }
                else
                {

                    <select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                            asp-for="@documentService.FrequencytableValue" asp-items="@documentService.FrequencyTablesList" class="form-control" size="8">
                    </select>
                }


            </div>
            <br />
            <div class="center_top_menu" style="width: 50%; height:100%">
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:150px">Document grouping</label>
                <p> &nbsp &nbsp</p>
                <input type="checkbox" id="docGrouping" checked="true" name="selectedLevel" />

            </div>
            <br />
            <p>&nbsp &nbsp</p>

            <div class="center_top_menu" style="width: 50%; height:100%">
                <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:150px;"></label>
                <button type="submit" id="searh_now" class="btn btn-primary" style="width: 40%; background-color: darkseagreen;" onclick="SearchNow()">Search</button>
            </div>
            <br />
            <p>&nbsp &nbsp</p>

        </div>
    <br />

    <br />
    <div id="print_div" class="center" style="@(showDiv ? "display: block;" : "display: none;")">
        <div class="center_top_menu center" style="width: 40%; height:100%">
            <button type="submit" id="download_excel" class="btn btn-secondary center" style="width: 50%; background-color: limegreen; margin: 5px;">
                <i class="fas fa-file-excel"></i>Download Excel
            </button>
            <button type="submit" id="download_pdf" class="btn btn-secondary center" style="width: 50%; background-color: red; margin: 5px;">
                <i class="fas fa-file-pdf"></i> Download PDF
            </button>
        </div>
    </div>
    <br />

    <p id="docsHidden" style="visibility:hidden;"></p>
    <div id="rData" class="center">
        @if (Model != null)
        {
        @if (Model.Count() > 0)
        {
        <table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'>
            <tr><th style="text-align:center">Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>
            @foreach (FrekvencijeProject.Models.Json.DocumentStandardView i in Model)
            {
        <tr>
            <td><a href='@i.Link'>@i.CombineTitle</a>   @if(i.Notes !=""){
                <a onclick="PresentNotes('@i.Notes'); return false;"><img src="~/images/smalldocument.gif"></img></a>
            
            }
            </td>
                <script type="text/javascript">
                    $('#docsHidden').text("");
                </script>
            <td>
                @i.FrequencyBand
            </td>
            <td>
                @i.Application
            </td>
            <td>
                @i.Type
            </td>
        </tr>
            }
        </table>

            }
        }
    </div>
</body>
