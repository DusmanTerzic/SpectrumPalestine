@{
    bool showDiv = (Model != null); // Set this value based on your condition
}
@inject FrekvencijeProject.Controllers.InterfacesController interfacesService
@model IEnumerable<FrekvencijeProject.Models.Interfaces.InterfacesView>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js">
</script>
<head>
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
    </style>
</head>

@if (Model != null)
{
    @if (Model.Count() > 0)
    {

        <script type="text/javascript">
     //alert('test');

    setTimeout(function () {
        //your code here

        //var value = ;
        //alert('ucitao sam:' + value);
        $('#frequencySize').val(@Model.ElementAt(0).FrequencySizeValue).change();
    }, 500);
        </script>
    }
}

<script type="text/javascript">
    var DocString = "";
    function LinkClick() {
        //alert('Does this work?'+e);

        var value = 'ADS    Automatic Dependant Surveillance (Aeronautical)<br/>';
        value += 'AES	    Aircraft Earth Station<br/>';
        value += 'AGA       Air-Ground-Air<br/>';
        value += 'AIS	    Universal Shipborne Automatic Identification System<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'AM	    Amplitude Modulation<br/>';
        value += 'AMRD	    Autonomous Maritime Radio Device<br/>';
        value += 'ALD	    Assistive Listening Devices<br/>';
        value += 'ASDE	    Airport Surface Detection Equipment<br/>';
        value += 'BBDR	    Broad Band Disaster Relief<br/>';
        value += 'BFWA	    Broadband Fixed Wireless Access<br/>';
        value += 'BWA	    Broadband Wireless Access<br/>';
        value += 'CB	    Citizens Band<br/>';
        value += 'CGC	    Complementary Ground Component<br/>';
        value += 'CT	    Cordless Telephone<br/>';
        value += 'DA2GC	    Direct Air-to-Ground Communications<br/>';
        value += 'DECT	    Digital Enhanced Cordless Telecommunications<br/>';
        value += 'D-GPS	    Differential Global Positioning System<br/>';
        value += 'DME	    Distance Measuring Equipment<br/>';
        value += 'DRM	    Digital Radio Mondiale<br/>';
        value += 'DSC	    Digital Selective Calling<br/>';
        value += 'DVB-T	    Digital Video Broadcasting – Terrestrial<br/>';
        value += 'ELT	    Emergency locator transmitter<br/>';
        value += 'ENG/OB	Electronic News Gathering / Outside Broadcasting<br/>';
        value += 'EPIRBs	Emergency Position Indicating Radio Beacons<br/>';
        value += 'ESIM	    Earth Stations In-Motion<br/>';
        value += 'ESOMPs	Earth Stations On Mobile Platforms<br/>';
        value += 'ESV	    Earth Stations on-board Vessels<br/>';
        value += 'FM	    Frequency Modulation<br/>';
        value += 'FRMCS	    Future Railway Mobile Communication System<br/>';
        value += 'FSS	    Fixed-Satellite Service<br/>';
        value += 'FWA	    Fixed Wireless Access<br/>';
        value += 'GBAS	    Ground Based Augmentation System<br/>';
        value += 'GBSAR	    Ground Based Synthetic Aperture Radar<br/>';
        value += 'GLONASS	Globalnaya Navigatsionnaya Sputnikovaya Sistema<br/>';
        value += 'GMDSS	    Global Maritime Distress and Safety System<br/>';
        value += 'GNSS	    Global Navigation Satellite System<br/>';
        value += 'GNSS      Pseudolites	Global Navigation Satellite System Pseudolites<br/>';
        value += 'GPR	    Ground Probing Radar<br/>';
        value += 'GPS	    Global Positioning System<br/>';
        value += 'GSM	    Global System for Mobile Communications<br/>';
        value += 'GSM-R	    Global System for Mobile Communications on Railways<br/>';
        value += 'GSO	    GeoStationary Orbit<br/>';
        value += 'HAPS	    High Altitude Platform Station<br/>';
        value += 'HEST	    High e.i.r.p. Satellite Terminal<br/>';
        value += 'IFF	    Identification Friend or Foe<br/>';
        value += 'ILS	    Instrument Landing System<br/>';
        value += 'IMT-2000	International Mobile Telecommunications-2000<br/>';
        value += 'IMT-Advanced	Systems beyond IMT-2000<br/>';
        value += 'IMT	    International Mobile Telecommunications (includes IMT-2000 and IMT-Advanced)<br/>';
        value += 'ISM	    Industrial, Scientific and Medical applications<br/>';
        value += 'ITS	    Intelligent Transport Systems<br/>';
        value += 'JTIDS	    Joint Tactical Information Distribution System<br/>';
        value += 'LAES	    Location Application for Emergency Services<br/>';
        value += 'LANs	    Local Area Networks<br/>';
        value += 'LEST	    Low e.i.r.p. Satellite Terminal<br/>';
        value += 'LP-AMI	Low Power Active Medical Implants<br/>';
        value += 'LPD	    Low Power Device<br/>';
        value += 'LPR	    Level Probing Radar<br/>';
        value += 'LT2	    Location Tracking Type 2<br/>';
        value += 'MBANS	    Medical Body Area Network System<br/>';
        value += 'MBR	    Maritime Broadband Radio<br/>';
        value += 'MCA	    Mobile Communications on Board Aircraft<br/>';
        value += 'MCV	    Mobile Communication Services on Board Vessels<br/>';
        value += 'MFCN	    Mobile/Fixed Communications Networks<br/>';
        value += 'MLS	    Microwave Landing System<br/>';
        value += 'MSI	    Maritime Safety Information<br/>';
        value += 'MSS	    Mobile-Satellite Service<br/>';
        value += 'MWS	    Multimedia Wireless System<br/>';
        value += 'NAVTEX	Narrow-band direct-printing telegraphy system for transmission of navigational and meteorological warnings and urgent information to ships<br/>';
        value += 'NGSO	    Non-GeoStationary Orbit<br/>';
        value += 'NMR	    Nuclear Magnetic Resonance applications<br/>';
        value += 'NP2M	    Narrowband Point to Multipoint system<br/>';
        value += 'PAMR	    Public Access Mobile Radio<br/>';
        value += 'PLB	    Personal Locator Beacon<br/>';
        value += 'PMR	    Private (Professional) Mobile Radio<br/>';
        value += 'PMSE	    Programme Making and Special Events<br/>';
        value += 'POCSAG	Post Office Code Standards Advisory Group<br/>';
        value += 'PPDR	    Public Protection & Disaster Relief<br/>';
        value += 'RFID	    Radio Frequency Identification<br/>';
        value += 'RLAN	    Radio Local Area Network<br/>';
        value += 'RMR	    Railway Mobile Radio<br/>';
        value += 'RTE	    Radar Target Enhancer<br/>';
        value += 'SAB	    Service Ancillary to Broadcasting<br/>';
        value += 'SAP	    Service Ancillary to Programme making<br/>';
        value += 'SAR 	    Search and Rescue<br/>';
        value += 'SATCOM	Satellite Communication<br/>';
        value += 'SIT/SUT	Satellite Interactive Terminal / Satellite User Terminal<br/>';
        value += 'SNG	    Satellite News Gathering<br/>';
        value += 'S-PCS	    Satellite - Personal Communications System<br/>';
        value += 'SRD	    Short Range Devices<br/>';
        value += 'SRR	    Short Range Radars<br/>';
        value += 'SSR	    Secondary Surveillance Radar<br/>';
        value += 'TACAN	    Tactical Air Navigation<br/>';
        value += 'T-DAB	    Terrestrial Digital Audio Broadcasting<br/>';
        value += 'TETRA	    Terrestrial Trunked Radio<br/>';
        value += 'TETRAPOL	Digital PMR technology<br/>';
        value += 'TLPR	    Tank Level Probing Radar<br/>';
        value += 'TRA-ECS	Terrestrial radio applications capable of providing electronic communications services<br/>';
        value += 'TTT	    Transport and Traffic Telematics<br/>';
        value += 'TV	    Television<br/>';
        value += 'UAS	    Unmanned Aircraft System<br/>';
        value += 'ULP-AMI	Ultra Low Power Active Medical Implants<br/>';
        value += 'ULP-AID	Ultra Low Power Animal Implants Devices<br/>';
        value += 'ULP-MMI	Ultra Low Power Medical Membrane Implants<br/>';
        value += 'ULP-WMCE	Ultra-Low Power Wireless Medical Capsule Endoscopy<br/>';
        value += 'VLBI	    Very Long Baseline Interferometry<br/>';
        value += 'VOR	    VHF Omnidirectional Radio Range<br/>';
        value += 'VSAT	    Very Small Aperture Terminal<br/>';
        value += 'UWB	    Ultra Wideband<br/>';
        value += 'WAIC	    Wireless Avionics Intra-Communications systems<br/>';
        value += 'WIA	    Wireless Industrial Applications<br/>';
        value += 'WPR	    Wall Probing Radar<br/>';
        value += 'WPT	    Wireless Power Transmission<br/>';


        //$('#btnfoot').trigger('click');
        showModal("Application abbreviations", "<p>" + value + "</p>");

    }


    function InputAction(e) {

        var evt = (e) ? e : window.event;
        var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
        //if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        //    alert("You pressed a key inside the input field");
        //    return false;
        //}
        if (charCode == 144 || charCode == 12 || charCode == 8) {
            return true;
        }
        if ((charCode >= 96 && charCode <= 105) || (charCode >= 48 && charCode <= 57)) {
            return true;
        } else {
            return false;
            //alert("You pressed a key inside the input field");
        }

    }

    function SearchNow() {
        var div = document.getElementById("print_div");
        div.style.display = "block";
        //alert("Works");
        var SearchByValues = false;
        if ($('#application_first_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');
                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_first_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 1,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }


                                    items += "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });

                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
        }

        if ($('#application_second_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');

                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_second_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 2,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }
                                    items +=
                                        "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });



                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
            }

        if ($('#application_third_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $(".typeDoc input:radio[name=demo]:checked").val()
                 //alert("Your gender is " + selectedOption);
                //$('.gender input[type="radio"]').click(function () {
                //});
                $('#error_input').html('');

                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchOnFirstLevel")",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                ApplicatonVal: $('#application_third_value').val(),
                                DocumentsType: $(".typeDoc input:radio[name=demo]:checked").val(),
                                LevelApp : 3,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                itemsO += "</table>";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                $.each(response, function (i, generalTemp) {

                                    items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                    if (generalTemp.Notes != "") {

                                        //alert(generalTemp.Notes);
                                        items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                        items += "</td>";
                                    } else {
                                        items += "</td>";
                                    }

                                    items +=
                                        "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type +"</td></tr>";

                                });
                                items += "</table>";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert("faliure");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert("greska");*/
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join("<br />"));
                        }
                    });
                } else {
                     $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                }
        }
        if (SearchByValues == false) {
            $("#frequency_table :selected").each(function () {
                if ($('#all_document_type').val() != '1') {

                    //alert(this.value);
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val());
                    if (isNaN(number1) && isNaN(number2)) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchAllDocType")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name="demo"]:checked').val(),
                                AbbrValue: $('input[name="abbreviation"]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchDocumentByType")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name="demo"]:checked').val(),
                                AbbrValue: $('input[name="abbreviation"]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                } else {
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val());
                    if (isNaN(number1) && isNaN(number2)) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchAllDoc")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            //alert(generalTemp.Notes);
                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SearchDocument")",

                            data: {
                                FrequencyTableVal: $("#frequency_table option:selected").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";
                                    itemsO += "</table>";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>";

                                    $.each(response, function (i, generalTemp) {

                                        items += "<tr><td><a href='" + generalTemp.Link + "'>" + generalTemp.CombineTitle + "</a>&nbsp;&nbsp;&nbsp;&nbsp;";
                                        if (generalTemp.Notes != "") {

                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +=
                                            "<td>" + generalTemp.FrequencyBand + "</td><td>" + generalTemp.Application + "</td><td>" + generalTemp.Type + "</td></tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
                    }
                }
            });
        }

    }

    function PresentNotes(element) {
        //alert("ppp:");
        showModal("Notes", element);
    }

    function showModal(titleHtml, contentHtml) {
        const modal = document.createElement("div");
        //const modal = document.getElementById("tempModal");

        modal.classList.add("modal_u_app");
        modal.innerHTML = `
        <div class="modal__inner">
            <div class="modal__top">
                <div class="modal__title">${titleHtml}</div>
                <button class="modal__close" type="button">
                    <span class="material-icons">close</span>
                </button>
            </div>
            <div class="modal__content">${contentHtml}</div>
            <div class="modal__bottom"></div>
        </div>`;

        modal.querySelector(".modal__close").addEventListener("click", () => {
            document.body.removeChild(modal);
        });

        document.body.appendChild(modal);

    }

    function FirstChange() {
        //alert("Works");
        if ($('#application_first_value').val() != '1') {
            $('#application_second_value').val('1').change();
            $('#application_third_value').val('1').change();
        }
    }


    function FirstChangeAll() {
        if ($('#allocation_first_value').val() != '1') {
            $('#allocation_second_value').val('1').change();
            $('#allocation_third_value').val('1').change();
        }
    }

    function SecondChange() {
        //alert("Works");
        if ($('#application_second_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_third_value').val('1').change();

        }
    }

    function SecondChangeAll() {
        //alert("Works");
        if ($('#allocation_second_value').val() != '1') {
            $('#allocation_first_value').val('1').change();
            $('#allocation_third_value').val('1').change();

        }
    }

    function ThirdChange() {
        //alert("Works");
        if ($('#application_third_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_second_value').val('1').change();

        }
    }


    function ThirdChangeAll() {
        //alert("Works");
        if ($('#allocation_third_value').val() != '1') {
            $('#allocation_first_value').val('1').change();
            $('#allocation_second_value').val('1').change();

        }
    }



    function handleChange(src) {
        //alert(src.value);
        if (src.value == 'R') {
            $("#all_document_type").empty();
            var o = new Option("<all document types - regulatory and informative documents>", "1");

            //$(o).html("< all document types - regulatory and informative documents >");
            $("#all_document_type").append(o);
            var o2 = new Option("ECC Decs/Recs", "2");

            //$(o2).html("ECC Decs/Recs");
            $("#all_document_type").append(o2);
            var o3 = new Option("Harmonised standards", "3");

            //$(o3).html("Harmonised standards");
            $("#all_document_type").append(o3);
            var o4 = new Option("Licensing info", "4");

            //$(o4).html("Licensing info");
            $("#all_document_type").append(o4);
            var o5 = new Option("NTFA", "5");

            //$(o5).html("NTFA");
            $("#all_document_type").append(o5);

            var o6 = new Option("Other", "6");

            //$(o6).html("Other");
            $("#all_document_type").append(o6);

            var o7 = new Option("RE subclass", "7");

            //$(o7).html("Other");
            $("#all_document_type").append(o7);

            var o8 = new Option("RIS Models", "8");

            //$(o8).html("RIS Models");
            $("#all_document_type").append(o8);


        } else {
            $("#all_document_type").empty();
            var o = new Option("<all document types - regulatory and informative documents>", "1");

            //$(o).html("< all document types - regulatory and informative documents >");
            $("#all_document_type").append(o);
            var o2 = new Option("ECC-ECO", "2");

            //$(o2).html("ECC-ECO");
            $("#all_document_type").append(o2);
            var o3 = new Option("National", "3");

            //$(o3).html("National");
            $("#all_document_type").append(o3);
            var o4 = new Option("Third party", "4");

            //$(o4).html("Third party");
            $("#all_document_type").append(o4);

        }
    }


    function RunSearch() {
        $.ajax({
                            type: "POST",
                            url: "@Url.Action("GeneralSearch")",
                            data: {
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $("#frequency_table option:selected").text()
                            },
                             success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Country</th><th>Radiocommunication Service</th><th>Application</th><th>Frequency band</th>";
                                    items += "<th>Channeling</th><th>Occupied bandwidth</th><th>Direction / Separation</th><th>Transmit Power</th></tr>";

                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = "<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Country</th><th>Radiocommunication Service</th><th>Application</th><th>Frequency band</th>";
                                    items += "<th>Channeling</th><th>Occupied bandwidth</th><th>Direction / Separation</th><th>Transmit Power</th></tr>";
                                    $.each(response, function (i, generalTemp) {

                                        

                                        items += "<tr><td style='width: 100px;'>" + generalTemp.Country + "</td>";
                                        items += "<td style='width: 200px;'>" + generalTemp.RadiocommunicationService + "</td>";
                                        items += "<td style='width: 100px;'>" + generalTemp.Application + "</td>";
                                        items += "<td style='width: 100px;'>" + generalTemp.FrequencyBand + "</td>";
                                        items += "<td style='width: 100px;'>" + generalTemp.Channeling + "</td>";
                                        items += "<td style='width: 200px;'>" + generalTemp.OccupiedBandwidth + "</td>";
                                        items += "<td style='width: 200px;'>" + generalTemp.DirectionSeparation + "</td>";
                                        items += "<td style='width: 350px;'>" + generalTemp.TransmitPower;
                                        if (generalTemp.Notes != "") {

                                            items += "<img src=\"/images/smalldocument.gif\" onclick=\"PresentNotes('" + generalTemp.Notes + "'); return false;\"></img>";

                                            items += "</td>";
                                        } else {
                                            items += "</td>";
                                        }

                                        items +="</tr>";

                                    });
                                    items += "</table>";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });
    }


    


    function handleChangeAppAll(src) {
        if (src.value == 'Hierarchical') {

             $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByHierarchical")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#app_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#app_all").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#app_all");
                                        if (generalTemp.name == "<all application terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + generalTemp.Number,
                                                html: "all application terms"
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));

                                            } else {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });


        } else {
            $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByAlphabetical")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#app_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#app_all").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#app_all");
                                        if (generalTemp.name == "<all application terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "all application terms"
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "<p>" + generalTemp.name + "</p>"
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });

        }
    }

    function handleClickCheckBox(src) {
        //alert("values:" + src.id);
        if (src.id == "ChannelingId"
            || src.id == "OccupiedBandwithId"
            || src.id == "DirectionSeparationId"
            || src.id == "TransmitPowerId"
            || src.id == "ChannelAccessId"
            || src.id == "AuthorisationRegimeId"
            || src.id == "ArtRequiermentsId"
            || src.id == "FrequencyPlanningId"
            || src.id == "PlannedChangesId"
            || src.id == "ReferenceId"
            || src.id == "NotificationId"
            || src.id == "RemarksId") {
            $("#AllColumnsId").prop("checked", false);
        }
        if (src.id == "AllColumnsId") {
            $("#ChannelingId").prop("checked", false);
            $("#OccupiedBandwithId").prop("checked", false);
            $("#DirectionSeparationId").prop("checked", false);
            $("#TransmitPowerId").prop("checked", false);
            $("#ChannelAccessId").prop("checked", false);
            $("#AuthorisationRegimeId").prop("checked", false);
            $("#ArtRequiermentsId").prop("checked", false);
            $("#FrequencyPlanningId").prop("checked", false);
            $("#PlannedChangesId").prop("checked", false);
            $("#ReferenceId").prop("checked", false);
            $("#NotificationId").prop("checked", false);
            $("#RemarksId").prop("checked", false);
        }

    }

    function handleChangeAllocation(src) {
        if (src.value == 'Hierarchical') {

             $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByHierarchicalAll")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#allc_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#allc_all").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#allc_all");
                                        if (generalTemp.name == "<all allocation terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + generalTemp.Number,
                                                html: "all allocation terms"
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));

                                            } else {
                                                values.append($('<option>', {
                                                    value: "" + generalTemp.Number,
                                                    html: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });


        } else {
            $.ajax({
                            type: "POST",
                            url: "@Url.Action("OrderByAlphabeticalAll")",

                            data: {
                                //FrequencyTableVal: $("#frequency_table option:selected").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $("#allc_all").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $("#allc_all").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $("#allc_all");
                                        if (generalTemp.name == "<all allocation terms>") {
                                            //alert("postoji");
                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "all allocation terms"
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: "" + increment,
                                                html: "<p>" + generalTemp.name + "</p>"
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert("faliure");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert("greska");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join("<br />"));
                            }
                        });

        }
    }

    $(function () {
        $('#download_pdf').click(function () {
            var selected = $("#frequency_table :selected").map((_, e) => e.value).get();
            $.ajax({
                type: "POST",
                url: "@Url.Action("DownloadPDF", "Interfaces")",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $("#frequency_table option:selected").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {

                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'pdf' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.pdf';

                    // Programmatically trigger the download
                    link.click();


                },
                failure: function (response) {
                    alert("Failure: An error occurred while making the AJAX request.");
                },
                error: function (response) {
                    alert("Error: An error occurred while making the AJAX request.");
                }
            });
        });

        $('#download_excel').click(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DownloadExcel", "Interfaces")",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $("#frequency_table option:selected").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {
                    // Create a Blob from the response data
                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.xlsx';

                    // Programmatically trigger the download
                    link.click();
                },
                failure: function (response) {
                    alert("Failure: An error occurred while making the AJAX request.");
                },
                error: function (response) {
                    alert("Error: An error occurred while making the AJAX request.");
                }
            });
        });
    });

</script>

<body id="content_container_body">
    <div class="centerpanel">
        <div class="left">Interfaces</div>
        <div class="right">
            <img src="~/images/Palestina.png" width="80px" height="50px" />
        </div>
    </div>

    <br />

    <div style="background-color: white; width: 70%; margin-top: 30px; padding-top:30px;" class="center">
        <br />
        <div class="form-group center_top_menu" style="width: 90%; height:100%">
            <label id="search_by" style="width:150px; font-weight: bold; font-family: Roboto; font-size: 13px; height: 35px" asp-for="@interfacesService.Frequency"></label>
            <p> &nbsp &nbsp</p>
            <input id="from" aria-label="From" class="form-control text-box single-line"
                   data-val-maxlength-max="30" asp-for="@interfacesService.From" value="@TempData["fromTempValue"]"
                   style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;" placeholder="From" type="number" onkeydown="return  InputAction(event)" />
            <p> &nbsp &nbsp</p>
            <input id="to" aria-label="To" class="form-control text-box single-line"
                   data-val-maxlength-max="30" asp-for="@interfacesService.To" value="@TempData["toTempValue"]"
                   style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;" placeholder="To" type="number" onkeydown="return  InputAction(event)" />
            <p> &nbsp &nbsp</p>
            @if (Model != null)
            {
                @if (Model.Count() > 0)
                {
                    
                    <select id="frequencySize" style="width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@Model.ElementAt(0).FrequencySizeValue" asp-items="@Model.ElementAt(0).FrequencySizesList">
                    </select>
                }
                else if (Model.Count() == 0)
                {
                    <select id="frequencySize" style="width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@interfacesService.FrequencySizeValue" asp-items="@interfacesService.FrequencySizesList">
                    </select>
                }

            }
            else
            {
                
                <select id="frequencySize" style="width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@interfacesService.FrequencySizeValue" asp-items="@interfacesService.FrequencySizesList">
                </select>
            }


            @*<select id="frequencySize" style="width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;" asp-for="@documentService.FrequencySizeValue" asp-items="@documentService.FrequencySizesList">
        </select>*@
        </div>





        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px">Application</label>
            <p> &nbsp &nbsp</p>
            <select id="application_first_value" onchange="FirstChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.ApplicationFirstValue" asp-items="@interfacesService.ApplicationFirstList">
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <select id="application_second_value" onchange="SecondChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.ApplicationSecondValue" asp-items="@interfacesService.ApplicationSecondList">
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <select id="application_third_value" onchange="ThirdChange()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.ApplicationThirdValue" asp-items="@interfacesService.ApplicationThirdList">
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight:bold; font-family:Roboto; font-size:13px;  width:150px;"></label>
            <p>&nbsp &nbsp</p>
            <input type="checkbox" id="selectedLevel" name="selectedLevel">
            <label for="selectedLevel" style="font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;"> Search only in the selected level</label>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:80%; height: 35px; text-align: center;">-or-</label>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <div class="typeHierra">
                <input type="radio" name="hierarcApp" onchange="handleChangeAppAll(this);" value="Hierarchical" /> Hierarchical
            </div>
            <div class="typeHierra">
                <input type="radio" name="hierarcApp" onchange="handleChangeAppAll(this);" value="Alphabetical" checked /> Alphabetical
            </div>
            <p> &nbsp &nbsp</p>
            <div id="abbr"><a href="#" onClick="LinkClick(); return false;">Abbreviations</a></div>
        </div>


        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            @*onchange="ValueOnChange(this);" *@
            <select id="app_all" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid; border-width: 3px; "
                    asp-for="@interfacesService.ApplicationAllValue" asp-items="@interfacesService.ApplicationAllList">
                @*<option value="1">&lt;all application terms &gt;</option>*@
            </select>
        </div>


        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px">Service</label>
            <p> &nbsp &nbsp</p>
            <select id="allocation_first_value" onchange="FirstChangeAll()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.AllocationFirstValue" asp-items="@interfacesService.AllocationFirstList">
            </select>
        </div>
        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <select id="allocation_second_value" onchange="SecondChangeAll()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.AllocationSecondValue" asp-items="@interfacesService.AllocationSecondList">
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <select id="allocation_third_value" onchange="ThirdChangeAll()" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"
                    asp-for="@interfacesService.AllocationThirdValue" asp-items="@interfacesService.AllocationThirdList">
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:80%; height: 35px; text-align: center;">-or-</label>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            <div class="typeHierra">
                <input type="radio" name="hierarc" onchange="handleChangeAllocation(this);" value="Hierarchical" /> Hierarchical

            </div>
            <div class="typeHierra">
                <input type="radio" name="hierarc" onchange="handleChangeAllocation(this);" value="Alphabetical" checked /> Alphabetical
            </div>
            <p> &nbsp &nbsp</p>
            <div id="abbr"><a href="#" onClick="LinkClick(); return false;">Abbreviations</a></div>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"></label>
            <p> &nbsp &nbsp</p>
            @*onchange="ValueOnChange(this);" *@
            <select id="allc_all" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid; border-width: 3px; "
                    asp-for="@interfacesService.AllocationAllValue" asp-items="@interfacesService.AllocationAllList">
                <option value="1">&lt;all allocation terms &gt;</option>
            </select>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%;">

            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px">Notification</label>
            <p> &nbsp &nbsp</p>
            <input type="text" id="notification_value" style="width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;">
            </input>
        </div>

        <div class="center_top_menu" style="width: 50%; height: 100%; margin-top: -20px;">
            <label id="ffff" style="font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px; height:10px;"></label>
            <p> &nbsp &nbsp</p>
            <label for="selectedLevel" style="font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;">Use % as wildcard</label>
        </div>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:150px" name="FrequencytableValue" asp-for="@interfacesService.FrequencyTable"></label>
            <p>&nbsp &nbsp</p>



            @if (Model != null)
            {
                @if (Model.Count() > 0)
                {
                    <select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                            asp-for="@interfacesService.FrequencytableValue" asp-items="Model.ElementAt(0).FrequencyTablesList" class="form-control" size="8">
                    </select>
                }
                else if (Model.Count() == 0)
                {
                    <select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                            asp-for="@interfacesService.FrequencytableValue" asp-items="@interfacesService.FrequencyTablesList" class="form-control" size="8">
                    </select>
                }
            }
            else
            {

                <select id="frequency_table" style="width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"
                        asp-for="@interfacesService.FrequencytableValue" asp-items="@interfacesService.FrequencyTablesList" class="form-control" size="8">
                </select>
            }


        </div>
        <div>
            <label for="selectedColumns" style="font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;">Selected Columns</label>
        </div>
        <div>
            <input type="checkbox" id="AllColumnsId" name="source" value="AllColumns" onclick="handleClickCheckBox(this);">
            <label for="AllColumnsId">All columns</label>
        </div>

        <div>
            <input type="checkbox" id="ChannelingId" name="source" onclick="handleClickCheckBox(this);" value="Channeling">
            <label for="ChannelingId">Channeling</label>
            <input type="checkbox" id="OccupiedBandwithId" name="source" onclick="handleClickCheckBox(this);" value="OccupiedBandwith">
            <label for="OccupiedBandwithId">Occupied bandwith</label>
            <input type="checkbox" id="DirectionSeparationId" name="source" value="DirectionSeparation" onclick="handleClickCheckBox(this);">
            <label for="DirectionSeparationId">Direction / Separation</label>
            <input type="checkbox" id="TransmitPowerId" name="source" value="TransmitPower" onclick="handleClickCheckBox(this);">
            <label for="TransmitPowerId">Transmit Power</label>
            <input type="checkbox" id="ChannelAccessId" name="source" value="ChannelAccess" onclick="handleClickCheckBox(this);">
            <label for="ChannelAccessId">Channel access</label>
            <input type="checkbox" id="AuthorisationRegimeId" name="source" value="AuthorisationRegime" onclick="handleClickCheckBox(this);">
            <label for="AuthorisationRegimeId">Authorisation regime</label>
            <input type="checkbox" id="ArtRequiermentsId" name="source" value="ArtRequierments" onclick="handleClickCheckBox(this);">
            <label for="ArtRequiermentsId">Art 3.3 requierments</label>
            <input type="checkbox" id="FrequencyPlanningId" name="source" value="FrequencyPlanning" onclick="handleClickCheckBox(this);">
            <label for="FrequencyPlanningId">Frequency planning</label>
            <input type="checkbox" id="PlannedChangesId" name="source" value="PlannedChanges" onclick="handleClickCheckBox(this);">
            <label for="PlannedChangesId">Planned changes</label>
            <input type="checkbox" id="ReferenceId" name="source" value="Reference" onclick="handleClickCheckBox(this);">
            <label for="ReferenceId">Reference</label>
            <input type="checkbox" id="NotificationId" name="source" value="Notification" onclick="handleClickCheckBox(this);">
            <label for="NotificationId">Notification #</label>
            <input type="checkbox" id="RemarksId" name="source" value="Remarks" onclick="handleClickCheckBox(this);">
            <label for="RemarksId">Remarks</label>

        </div>
        <br />

        <br />
        <p>&nbsp &nbsp</p>

        <div class="center_top_menu" style="width: 50%; height:100%">
            <label id="search_by" style="font-weight: bold; font-family: Roboto; font-size: 13px; width:150px;"></label>
            <button type="submit" id="searh_now" class="btn btn-primary" style="width: 40%; background-color: darkseagreen;" onclick="RunSearch()">Search</button>
        </div>
        <br />
        <p>&nbsp &nbsp</p>

    </div>
    <br />

    <br />
    <div id="print_div" class="center" style="@(showDiv ? "display: block;" : "display: none;")">
        <div class="center_top_menu center" style="width: 40%; height:100%">
            <button type="submit" id="download_excel" class="btn btn-secondary center" style="width: 50%; background-color: limegreen; margin: 5px;">
                <i class="fas fa-file-excel"></i>Download Excel
            </button>
            <button type="submit" id="download_pdf" class="btn btn-secondary center" style="width: 50%; background-color: red; margin: 5px;">
                <i class="fas fa-file-pdf"></i> Download PDF
            </button>
        </div>
    </div>
    <br />

    <p id="docsHidden" style="visibility:hidden;"></p>
    <div id="rData" class="center">
        @if (Model != null)
        {
            @if (Model.Count() > 0)
            {
                <table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'>
                    <tr>
                        <th style="text-align:center">Country</th>
                        <th>Radiocommunication Service</th>
                        <th>Application</th>
                        <th>Frequency band</th>
                        <th>Channeling</th>
                        <th>Occupied bandwidth</th>
                        <th>Direction / Separation</th>
                        <th>Transmit Power</th>
                    </tr>
                    @foreach(FrekvencijeProject.Models.Interfaces.InterfacesView i in Model)
                    {
                <tr>
                    <td style="width:100px;">
                        @i.Country
                    </td>
                    <td style="width:200px;">
                        @i.RadiocommunicationService
                    </td>
                    <td style="width:100px;">
                        @i.Application
                    </td>
                    <td style="width:100px;">
                        @i.FrequencyBand
                    </td>
                    <td style="width:100px;">
                        @i.Channeling
                    </td>
                    <td style="width:200px;">
                        @i.OccupiedBandwidth
                    </td>
                    <td style="width:200px;">
                        @i.DirectionSeparation
                    </td>
                    <td style="width:350px;">
                        @i.TransmitPower
                        @if (i.Notes != "")
                        {
                            <a onclick="PresentNotes('@i.Notes'); return false;"><img src="~/images/smalldocument.gif"></img></a>

                        }
                    </td>
                    

                </tr>
                    }
                </table>

            }
        }
    </div>
</body>
