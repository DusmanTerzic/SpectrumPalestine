#pragma checksum "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f53b53699432f4ebc75aa6e96c9ccf9a632323f3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_RightOfUse_Index), @"mvc.1.0.view", @"/Views/RightOfUse/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\_ViewImports.cshtml"
using FrekvencijeProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\_ViewImports.cshtml"
using FrekvencijeProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f53b53699432f4ebc75aa6e96c9ccf9a632323f3", @"/Views/RightOfUse/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be0eb2b377f6ff7efb6af5254ff59709e7a66500", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_RightOfUse_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<FrekvencijeProject.Models.RightOfUse.RightOfUseView>>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Palestina.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("80px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("search_by"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:150px; font-weight: bold; font-family: Roboto; font-size: 13px; height: 35px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("from"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-label", new global::Microsoft.AspNetCore.Html.HtmlString("From"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control text-box single-line"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-val-maxlength-max", new global::Microsoft.AspNetCore.Html.HtmlString("30"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("From"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "number", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onkeydown", new global::Microsoft.AspNetCore.Html.HtmlString("return  InputAction(event)"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("to"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-label", new global::Microsoft.AspNetCore.Html.HtmlString("To"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("To"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frequencySize"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("app_all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid; border-width: 3px; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("font-weight: bold; font-family: Roboto; font-size: 13px; width:150px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("FrequencytableValue"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frequency_table"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("content_container_body"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
  
    bool showDiv = (Model != null); // Set this value based on your condition

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\">\r\n</script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f314592", async() => {
                WriteLiteral(@"
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 29 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
 if (Model != null)
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
     if (Model.Count() > 0)
    {


#line default
#line hidden
#nullable disable
            WriteLiteral("<script type=\"text/javascript\">\r\n     //alert(\'test\');\r\n\r\n    setTimeout(function () {\r\n        //your code here\r\n\r\n        //var value = ;\r\n        //alert(\'ucitao sam:\' + value);\r\n        $(\'#frequencySize\').val(");
#nullable restore
#line 42 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                           Write(Model.ElementAt(0).FrequencySizeValue);

#line default
#line hidden
#nullable disable
            WriteLiteral(").change();\r\n    }, 500);\r\n</script>\r\n");
#nullable restore
#line 45 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 45 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script type=""text/javascript"">
    var DocString = """";
    function LinkClick() {
        //alert('Does this work?'+e);
        var value = 'ADS    Automatic Dependant Surveillance (Aeronautical)<br/>';
        value += 'AES	    Aircraft Earth Station<br/>';
        value += 'AGA       Air-Ground-Air<br/>';
        value += 'AIS	    Universal Shipborne Automatic Identification System<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'AM	    Amplitude Modulation<br/>';
        value += 'AMRD	    Autonomous Maritime Radio Device<br/>';
        value += 'ALD	    Assistive Listening Devices<br/>';
        value += 'ASDE	    Airport Surface Detection Equipment<br/>';
        value += 'BBDR	    Broad Band Disaster Relief<br/>';
        value += 'BFWA	    Broadband Fixed Wireless Access<br/>';
        value += 'BWA	    Broadband Wireless Access<br/>';
        value += 'CB	    Citizens Band<br/>';
      ");
            WriteLiteral(@"  value += 'CGC	    Complementary Ground Component<br/>';
        value += 'CT	    Cordless Telephone<br/>';
        value += 'DA2GC	    Direct Air-to-Ground Communications<br/>';
        value += 'DECT	    Digital Enhanced Cordless Telecommunications<br/>';
        value += 'D-GPS	    Differential Global Positioning System<br/>';
        value += 'DME	    Distance Measuring Equipment<br/>';
        value += 'DRM	    Digital Radio Mondiale<br/>';
        value += 'DSC	    Digital Selective Calling<br/>';
        value += 'DVB-T	    Digital Video Broadcasting – Terrestrial<br/>';
        value += 'ELT	    Emergency locator transmitter<br/>';
        value += 'ENG/OB	Electronic News Gathering / Outside Broadcasting<br/>';
        value += 'EPIRBs	Emergency Position Indicating Radio Beacons<br/>';
        value += 'ESIM	    Earth Stations In-Motion<br/>';
        value += 'ESOMPs	Earth Stations On Mobile Platforms<br/>';
        value += 'ESV	    Earth Stations on-board Vessels<br/>';
        valu");
            WriteLiteral(@"e += 'FM	    Frequency Modulation<br/>';
        value += 'FRMCS	    Future Railway Mobile Communication System<br/>';
        value += 'FSS	    Fixed-Satellite Service<br/>';
        value += 'FWA	    Fixed Wireless Access<br/>';
        value += 'GBAS	    Ground Based Augmentation System<br/>';
        value += 'GBSAR	    Ground Based Synthetic Aperture Radar<br/>';
        value += 'GLONASS	Globalnaya Navigatsionnaya Sputnikovaya Sistema<br/>';
        value += 'GMDSS	    Global Maritime Distress and Safety System<br/>';
        value += 'GNSS	    Global Navigation Satellite System<br/>';
        value += 'GNSS      Pseudolites	Global Navigation Satellite System Pseudolites<br/>';
        value += 'GPR	    Ground Probing Radar<br/>';
        value += 'GPS	    Global Positioning System<br/>';
        value += 'GSM	    Global System for Mobile Communications<br/>';
        value += 'GSM-R	    Global System for Mobile Communications on Railways<br/>';
        value += 'GSO	    GeoStationary Orbi");
            WriteLiteral(@"t<br/>';
        value += 'HAPS	    High Altitude Platform Station<br/>';
        value += 'HEST	    High e.i.r.p. Satellite Terminal<br/>';
        value += 'IFF	    Identification Friend or Foe<br/>';
        value += 'ILS	    Instrument Landing System<br/>';
        value += 'IMT-2000	International Mobile Telecommunications-2000<br/>';
        value += 'IMT-Advanced	Systems beyond IMT-2000<br/>';
        value += 'IMT	    International Mobile Telecommunications (includes IMT-2000 and IMT-Advanced<br/>';
        value += 'ISM	    Industrial, Scientific and Medical applications<br/>';
        value += 'ITS	    Intelligent Transport Systems<br/>';
        value += 'JTIDS	    Joint Tactical Information Distribution System<br/>';
        value += 'LAES	    Location Application for Emergency Services<br/>';
        value += 'LANs	    Local Area Networks<br/>';
        value += 'LEST	    Low e.i.r.p. Satellite Terminal<br/>';
        value += 'LP-AMI	Low Power Active Medical Implants<br/>';
       ");
            WriteLiteral(@" value += 'LPD	    Low Power Device<br/>';
        value += 'LPR	    Level Probing Radar<br/>';
        value += 'LT2	    Location Tracking Type 2<br/>';
        value += 'MBANS	    Medical Body Area Network System<br/>';
        value += 'MBR	    Maritime Broadband Radio<br/>';
        value += 'MCA	    Mobile Communications on Board Aircraft<br/>';
        value += 'MCV	    Mobile Communication Services on Board Vessels<br/>';
        value += 'MFCN	    Mobile/Fixed Communications Networks<br/>';
        value += 'MLS	    Microwave Landing System<br/>';
        value += 'MSI	    Maritime Safety Information<br/>';
        value += 'MSS	    Mobile-Satellite Service<br/>';
        value += 'MWS	    Multimedia Wireless System<br/>';
        value += 'NAVTEX	Narrow-band direct-printing telegraphy system for transmission of navigational and meteorological warnings and urgent information to ships<br/>';
        value += 'NGSO	    Non-GeoStationary Orbit<br/>';
        value += 'NMR	    Nuclear Magnet");
            WriteLiteral(@"ic Resonance applications<br/>';
        value += 'NP2M	    Narrowband Point to Multipoint system<br/>';
        value += 'PAMR	    Public Access Mobile Radio<br/>';
        value += 'PLB	    Personal Locator Beacon<br/>';
        value += 'PMR	    Private (Professional) Mobile Radio<br/>';
        value += 'PMSE	    Programme Making and Special Events<br/>';
        value += 'POCSAG	Post Office Code Standards Advisory Group<br/>';
        value += 'PPDR	    Public Protection & Disaster Relief<br/>';
        value += 'RFID	    Radio Frequency Identification<br/>';
        value += 'RLAN	    Radio Local Area Network<br/>';
        value += 'RMR	    Railway Mobile Radio<br/>';
        value += 'RTE	    Radar Target Enhancer<br/>';
        value += 'SAB	    Service Ancillary to Broadcasting<br/>';
        value += 'SAP	    Service Ancillary to Programme making<br/>';
        value += 'SAR 	    Search and Rescue<br/>';
        value += 'SATCOM	Satellite Communication<br/>';
        value += 'SIT/S");
            WriteLiteral(@"UT	Satellite Interactive Terminal / Satellite User Terminal<br/>';
        value += 'SNG	    Satellite News Gathering<br/>';
        value += 'S-PCS	    Satellite - Personal Communications System<br/>';
        value += 'SRD	    Short Range Devices<br/>';
        value += 'SRR	    Short Range Radars<br/>';
        value += 'SSR	    Secondary Surveillance Radar<br/>';
        value += 'TACAN	    Tactical Air Navigation<br/>';
        value += 'T-DAB	    Terrestrial Digital Audio Broadcasting<br/>';
        value += 'TETRA	    Terrestrial Trunked Radio<br/>';
        value += 'TETRAPOL	Digital PMR technology<br/>';
        value += 'TLPR	    Tank Level Probing Radar<br/>';
        value += 'TRA-ECS	Terrestrial radio applications capable of providing electronic communications services<br/>';
        value += 'TTT	    Transport and Traffic Telematics<br/>';
        value += 'TV	    Television<br/>';
        value += 'UAS	    Unmanned Aircraft System<br/>';
        value += 'ULP-AMI	Ultra Low Power ");
            WriteLiteral(@"Active Medical Implants<br/>';
        value += 'ULP-AID	Ultra Low Power Animal Implants Devices<br/>';
        value += 'ULP-MMI	Ultra Low Power Medical Membrane Implants<br/>';
        value += 'ULP-WMCE	Ultra-Low Power Wireless Medical Capsule Endoscopy<br/>';
        value += 'VLBI	    Very Long Baseline Interferometry<br/>';
        value += 'VOR	    VHF Omnidirectional Radio Range<br/>';
        value += 'VSAT	    Very Small Aperture Terminal<br/>';
        value += 'UWB	    Ultra Wideband<br/>';
        value += 'WAIC	    Wireless Avionics Intra-Communications systems<br/>';
        value += 'WIA	    Wireless Industrial Applications<br/>';
        value += 'WPR	    Wall Probing Radar<br/>';
        value += 'WPT	    Wireless Power Transmission<br/>';
        //$('#btnfoot').trigger('click');
        showModal(""Application abbreviations"", ""<p>"" + value + ""</p>"");

    }

    function NotesClick(env) {
        showModal(""Notes"", ""<p>"" + env + ""</p>"");
    }

    //function DocStandCl");
            WriteLiteral(@"ick(docNumber, env, docLink) {
    //    showModal(""Documents and standards"", ""<p><a href=\"""" + docLink + ""\"">"" + docNumber+"" "" + env + ""</a></p>"");
    //}

    function DocStandClick(docNumber, env, docLink) {
        //alert(docNumber);

        $('#docsHidden').append('<p><a href=\""' + docLink + '\"">' + docNumber + ' ' + env + '</a></p>');
        //element.append(""<p><a href=\"""" + docLink + ""\"">"" + docNumber + "" "" + env + ""</a></p >"");

    }

    function ShowAllValues(element,standard, isThereDocs, isThereStand) {
        //alert('value:' + isThereDocs + ',stand:' + isThereStand);

        //alert('im here:');

                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 194 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("SearchDocsAndStandards"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                    docId: element,
                                    StandId: standard ,
                                    isThereDocs: isThereDocs,
                                    isThereStands: isThereStand
                            },

                            success: function (response) {
                                var DocText = """";

                                if (Object.keys(response).length > 0) {

                                    $.each(response, function (i, generalTemp) {

                                        DocText += '<p><a href=\""' + generalTemp.Link + '\"">' + generalTemp.CombineTitle + '</a></p>';

                                    });
                                    showModal(""Documents and standards"", DocText);

                                }

                            }
                            ,
                            failure: function (response) {
             ");
            WriteLiteral(@"                   alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });

    }

    function ShowAllValuesInf(element,standard, isThereDocs, isThereStand) {
        //alert('value:' + isThereDocs + ',stand:' + isThereStand);

        //alert('im here:');

                        $.ajax({
                       ");
            WriteLiteral("     type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 243 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("SearchDocsAndStandardsInformative"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                    docId: element,
                                    StandId: standard ,
                                    isThereDocs: isThereDocs,
                                    isThereStands: isThereStand
                            },

                            success: function (response) {
                                var DocText = """";

                                if (Object.keys(response).length > 0) {

                                    $.each(response, function (i, generalTemp) {

                                        DocText += '<p><a href=\""' + generalTemp.Link + '\"">' + generalTemp.CombineTitle + '</a></p>';

                                    });
                                    showModal(""Documents and standards"", DocText);

                                }

                            }
                            ,
                            failure: function (response) {
             ");
            WriteLiteral(@"                   alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });

    }


    function handleChangeAppAll(src) {
        if (src.value == 'Hierarchical') {

             $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 291 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("OrderByHierarchical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + generalTemp.Number,
                                           ");
            WriteLiteral(@"     html: ""all application terms""
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: """" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));

                                            } else {
                                                values.");
            WriteLiteral(@"append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object inst");
            WriteLiteral(@"ead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });


        } else {
            $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 358 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("OrderByAlphabetical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + incremen");
            WriteLiteral(@"t,
                                                html: ""all application terms""
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: """" + increment,
                                                html: ""<p>"" + generalTemp.name + ""</p>""
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                           ");
            WriteLiteral(@"     /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });

        }
    }





    function showModal(titleHtml, contentHtml) {
        const modal = document.createElement(""div"");
        //const modal = document.getElementById(""tempModal"");

        modal.classList.add(""modal_u_app"");
        modal.innerHTML = `
        <div class=""modal__inner"">
            <div class=""modal__top"">
                <div class=""modal__title"">${titleHtml}</div>
                <bu");
            WriteLiteral(@"tton class=""modal__close"" type=""button"">
                    <span class=""material-icons"">close</span>
                </button>
            </div>
            <div class=""modal__content"">${contentHtml}</div>
            <div class=""modal__bottom""></div>
        </div>`;



        modal.querySelector("".modal__close"").addEventListener(""click"", () => {
            document.body.removeChild(modal);
        });

        document.body.appendChild(modal);


    }



    function SearchNow() {
        var div = document.getElementById(""print_div"");
        div.style.display = ""block"";
        var SearchByValues = false;
        if ($('#application_first_value').val() != '1') {
            SearchByValues = true;
            //alert(""Works"");
            if (SearchByValues == true) {
                var number1 = parseInt($('#from').val());
                var number2 = parseInt($('#to').val());
                if (number1 > number2) {
                    $('#error_input').html('Error!");
            WriteLiteral(@" In From field, it is bigger than To field');
                } else {

                    if ($(""#frequency_table option:selected"").text() != '') {

                        $('#error_input').html('');
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 467 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("SearchOnFirstLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                ApplicatonVal: $('#application_first_value').val()

                            },
                            success: function (response) {

                                if (Object.keys(response).length == 0) {
                                    //alert('poruka' + Object.keys(response).length);
                                    //$('#rData').load('Index.cshtml');
                                    $('#rData').empty();
                                    var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region ");
            WriteLiteral(@"code</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    //var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region name</th><th>Region code</th></tr>"";
                                    //var pp = false;
                                    //var DocText = """";
                                    //$.each(response, function (i, generalTemp) {

                                    //    items += ""<tr><td>"" + generalTemp.LowView + ""-"" + generalTemp.HighView + ""</td><td> "";
                                    //    //items += generalTemp.Application;
                           ");
            WriteLiteral(@"         //    $.each(generalTemp.AppItemsList, function (i, member) {
                                    //        items += member.Application;
                                    //        //alert(""tt:"" + member.Doc_number);

                                    //        DocText = """";
                                    //        pp = false;
                                    //        $.each(member.Documents, function (iv, tempDoc) {

                                    //            if (Object.keys(tempDoc).length > 0) {

                                    //                if (tempDoc.Doc_number != """") {
                                    //                    pp = true;
                                    //                    DocText += '<p><a href=' + tempDoc.Hyperlink + '>' + tempDoc.Doc_number + ' ' + tempDoc.Title_of_doc + '</a></p>';
                                    //                }

                                    //            }



                               ");
            WriteLiteral(@"     //        });

                                    //        $.each(member.Standards, function (iv, tempDoc) {
                                    //            if (Object.keys(tempDoc).length > 0) {

                                    //                if (tempDoc.StandardId > 0) {
                                    //                    pp = true;

                                    //                    DocText += '<p><a href=' + tempDoc.HyperlinkS + '>' + tempDoc.Etsi_standard + ' ' + tempDoc.Title_docS + '</a></p>';

                                    //                }
                                    //            }

                                    //        });

                                    //        if (pp == true) {

                                    //            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + DocText + ""'); return false;\"">Regulatory docs</butto");
            WriteLiteral(@"n>"";
                                    //            $('#docsHidden').text("""");
                                    //            p = false;
                                    //        }
                                    //        //if (member.Doc_number != null) {
                                    //        //    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""DocStandClick('"" + member.Doc_number + ""','"" + member.Title_of_doc + ""','"" + member.Hyperlink + ""'); return false;\"">Regulatory docs</button>"";
                                    //        //}
                                    //        if (member.Comment != """") {
                                    //            items += ""&nbsp&nbsp<button style=\""width: 100px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""NotesClick('"" + member.Comment + ""'); return false;\"">notes</button>"";
                                    //        }
     ");
            WriteLiteral(@"                               //        items += ""<br/>"";

                                    //    });
                                    //    items += ""<br/>"";


                                    //    items +=
                                    //        ""</td>"" +

                                    //        ""<td>"" + generalTemp.regionName + ""</td><td>"" + generalTemp.regionCode + ""</td></tr>"";

                                    //});
                                    //items += ""</table>"";

                                    //$('#rData').append(items).hide().fadeIn(2000);
                                        var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
                                        var isThereDocs = false;
                                        var isThereStands = false;
                                        ");
            WriteLiteral(@"var Docs = """";
                                        var Stand = """";
                                        var isThereDocsInf = false;
                                        var isThereStandsInf = false;
                                        var DocsInf = """";
                                        var StandInf = """";
                                        var incResponse = 0;
                                        $.each(response, function (i, generalTemp) {



                                            items += ""<tr><td>"" + generalTemp.LowView + ""-"" + generalTemp.HighView + ""</td><td> "";
                                            if (incResponse == 0) {
                                                incResponse++;

                                                if (generalTemp.isAllValues) {

                                                    setTimeout(function () {
                                                        //alert();
                                           ");
            WriteLiteral(@"             $('#frequencySize').val(generalTemp.sizeFrequency).change();
                                                        $('#from').val(generalTemp.lowJson);
                                                        $('#to').val(generalTemp.highJson);

                                                    }, 200);

                                                }

                                            } else if (incResponse > 0) {

                                            }
                                            $.each(generalTemp.Application, function (i, member) {
                                                if (!member.isDeletedApp) {
                                                items += ""<p>"" + member.Application;
                                                isThereDocs = false;
                                                isThereStands = false;
                                                Docs = """";
                                                Stand ");
            WriteLiteral(@"= """";
                                                isThereDocsInf = false;
                                                isThereStandsInf = false;
                                                DocsInf = """";
                                                StandInf = """";
                                                if (Object.keys(member.DocumentsAditional).length > 0) {

                                                    for (var tt = 0; tt < member.DocumentsAditional.length; tt++) {
                                                        if (tt == Object.keys(member.DocumentsAditional).length - 1) {
                                                            if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                                Docs += member.DocumentsAditional[tt].DocumentId;
                                                                isThereDocs = true;
                                                            } else if (member.");
            WriteLiteral(@"DocumentsAditional[tt].isRegulatory == false) {
                                                                DocsInf += member.DocumentsAditional[tt].DocumentId;
                                                                isThereDocsInf = true;
                                                            }
                                                        }
                                                        else {
                                                            if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                                Docs += member.DocumentsAditional[tt].DocumentId + "","";
                                                                isThereDocs = true;
                                                            } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                                DocsInf += member.DocumentsAditional[tt].DocumentId + "","";
       ");
            WriteLiteral(@"                                                         isThereDocsInf = true;
                                                            }

                                                        }
                                                    }
                                                } else {
                                                    isThereDocs = false;
                                                    isThereDocsInf = false;
                                                }
                                                if (Object.keys(member.StandardsAditional).length > 0) {

                                                    for (var tt = 0; tt < member.StandardsAditional.length; tt++) {
                                                        if (tt == Object.keys(member.StandardsAditional).length - 1) {
                                                            if (member.StandardsAditional[tt].isRegulatory == true) {
                                        ");
            WriteLiteral(@"                        Stand += member.StandardsAditional[tt].StandardId;
                                                                isThereStands = true;
                                                            } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                                StandInf += member.StandardsAditional[tt].StandardId;
                                                                isThereStandsInf = true;
                                                            }

                                                        }
                                                        else {
                                                            if (member.StandardsAditional[tt].isRegulatory == true) {
                                                                Stand += member.StandardsAditional[tt].StandardId + "","";
                                                                isThereStands = true;
         ");
            WriteLiteral(@"                                                   } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                                StandInf += member.StandardsAditional[tt].StandardId + "","";
                                                                isThereStandsInf = true;
                                                            }

                                                        }
                                                    }
                                                } else {
                                                    isThereStands = false;
                                                    isThereStandsInf = false;
                                                }
                                                if (isThereDocs && !isThereStands) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px");
            WriteLiteral(@";\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";

                                                }
                                                else if (!isThereDocs && isThereStands) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                                }
                                                else if (isThereDocs && isThereStands) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); retu");
            WriteLiteral(@"rn false; \"">Regulatory docs</button>"";
                                                }

                                                if (member.Comment != """") {
                                                    items += ""&nbsp&nbsp<button style=\""width: 100px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""NotesClick('"" + member.Comment + ""'); return false;\"">Notes</button>"";
                                                }
                                                if (isThereDocsInf && !isThereStandsInf) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";

                                                }
                                                else if (!isThereDocsInf && isT");
            WriteLiteral(@"hereStandsInf) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                                }
                                                else if (isThereDocsInf && isThereStandsInf) {
                                                    items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                                }
                                                Docs = """";
                                                Stand = """";
                           ");
            WriteLiteral(@"                     DocsInf = """";
                                                StandInf = """";
                                                isThereDocsInf = false;
                                                isThereStandsInf = false;
                                                isThereDocs = false;
                                                isThereStands = false;
                                            }
                                            });
                                            items += ""</p><br/>"";


                                            items += ""</td>"" + ""<td>"" + generalTemp.regionCode + ""</td></tr>"";
                                        });

                                        items += ""</table>"";

                                        $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) ");
            WriteLiteral(@"{
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
                    } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
                }
            }
        }
        if ($('#appl");
            WriteLiteral(@"ication_two_value').val() != '1') {

            SearchByValues = true;
            if (SearchByValues == true) {
                //alert(""execute condition"");
                var number1 = parseInt($('#from').val());
                var number2 = parseInt($('#to').val());
                if (number1 > number2) {
                    $('#error_input').html('Error! In From field, it is bigger than To field');
                } else {
                    if ($(""#frequency_table option:selected"").text() != '') {
                        //alert(""Works"" + $('#from').val() + ""=="" + $('#to').val() + ""..."" + $('#frequencySize').val() + ""___"" + $(""#frequency_table option:selected"").text() + "":::"" + $('#application_two_value').val());
                        $('#error_input').html('');
                         $.ajax({
                        type: ""POST"",
                        url: """);
#nullable restore
#line 741 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                         Write(Url.Action("SearchOnSecondLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                        data: {
                            FromVal: $('#from').val(),
                            ToVal: $('#to').val(),
                            FrequencySizeVal: $('#frequencySize').val(),
                            FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                            ApplicatonVal: $('#application_two_value').val()

                        },
                        success: function (response) {

                            if (Object.keys(response).length == 0) {
                                //alert('poruka' + Object.keys(response).length);
                                //$('#rData').load('Index.cshtml');
                                $('#rData').empty();
                                var itemsO = ""<table id='SearchAppTableId' class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
              ");
            WriteLiteral(@"                  itemsO += ""</table>"";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();

                                var items = ""<table  id='SearchAppTableId' class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
                                var isThereDocs = false;
                                var isThereStands = false;
                                var Docs = """";
                                var Stand = """";
                                var isThereDocsInf = false;
                                var isThereStandsInf = false;
                                var DocsInf = """";
                                var StandInf = """";
                                var noApps = fals");
            WriteLiteral(@"e;
                                var incResponse = 0;
                                $.each(response, function (i, generalTemp) {
                                    items += ""<tr><td>"" + generalTemp.LowView + ""-"" + generalTemp.HighView + ""</td><td> "";
                                    if (incResponse == 0) {
                                        incResponse++;

                                        if (generalTemp.isAllValues) {

                                            setTimeout(function () {
                                                //alert();
                                                $('#frequencySize').val(generalTemp.sizeFrequency).change();
                                                $('#from').val(generalTemp.lowJson);
                                                $('#to').val(generalTemp.highJson);

                                            }, 200);

                                        }

                                    } else if (incRespons");
            WriteLiteral(@"e > 0) {

                                    }
                                    noApps = false;
                                    $.each(generalTemp.Application, function (i, member) {
                                        if (!member.isDeletedApp) {
                                        items += ""<p>"" + member.Application;
                                        isThereDocs = false;
                                        isThereStands = false;
                                        Docs = """";
                                        Stand = """";
                                        isThereDocsInf = false;
                                        isThereStandsInf = false;
                                        DocsInf = """";
                                        StandInf = """";
                                        if (Object.keys(member.DocumentsAditional).length > 0) {

                                            for (var tt = 0; tt < member.DocumentsAditional.length; tt++) {");
            WriteLiteral(@"
                                                if (tt == Object.keys(member.DocumentsAditional).length - 1) {
                                                    if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                        Docs += member.DocumentsAditional[tt].DocumentId;
                                                        isThereDocs = true;
                                                    } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                        DocsInf += member.DocumentsAditional[tt].DocumentId;
                                                        isThereDocsInf = true;
                                                    }
                                                }
                                                else {
                                                    if (member.DocumentsAditional[tt].isRegulatory == true) {
                                 ");
            WriteLiteral(@"                       Docs += member.DocumentsAditional[tt].DocumentId + "","";
                                                        isThereDocs = true;
                                                    } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                        DocsInf += member.DocumentsAditional[tt].DocumentId + "","";
                                                        isThereDocsInf = true;
                                                    }

                                                }
                                            }
                                        } else {
                                            isThereDocs = false;
                                            isThereDocsInf = false;
                                        }
                                        if (Object.keys(member.StandardsAditional).length > 0) {

                                            for (var tt = 0; tt < mem");
            WriteLiteral(@"ber.StandardsAditional.length; tt++) {
                                                if (tt == Object.keys(member.StandardsAditional).length - 1) {
                                                    if (member.StandardsAditional[tt].isRegulatory == true) {
                                                        Stand += member.StandardsAditional[tt].StandardId;
                                                        isThereStands = true;
                                                    } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                        StandInf += member.StandardsAditional[tt].StandardId;
                                                        isThereStandsInf = true;
                                                    }

                                                }
                                                else {
                                                    if (member.StandardsAditional[tt].isRegulatory");
            WriteLiteral(@" == true) {
                                                        Stand += member.StandardsAditional[tt].StandardId + "","";
                                                        isThereStands = true;
                                                    } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                        StandInf += member.StandardsAditional[tt].StandardId + "","";
                                                        isThereStandsInf = true;
                                                    }

                                                }
                                            }
                                        } else {
                                            isThereStands = false;
                                            isThereStandsInf = false;
                                        }
                                        if (isThereDocs && !isThereStands) {
                                   ");
            WriteLiteral(@"         items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";

                                        }
                                        else if (!isThereDocs && isThereStands) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                        }
                                        else if (isThereDocs && isThereStands) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ");
            WriteLiteral(@"""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                        }

                                        if (member.Comment != """") {
                                            items += ""&nbsp&nbsp<button style=\""width: 100px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""NotesClick('"" + member.Comment + ""'); return false;\"">Notes</button>"";
                                        }

                                        if (isThereDocsInf && !isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";

                                        }
                                        else if (!isThereDocsI");
            WriteLiteral(@"nf && isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                        }
                                        else if (isThereDocsInf && isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                        }
                                        Docs = """";
                                        Stand = """";
                                        DocsInf = """";
                   ");
            WriteLiteral(@"                     StandInf = """";
                                        isThereDocsInf = false;
                                        isThereStandsInf = false;
                                        isThereDocs = false;
                                        isThereStands = false;
                                    }
                                    });

                                       items += ""</p><br/>"";

                                       items += ""</td>"" + ""<td>"" + generalTemp.regionCode + ""</td></tr>"";


                                });

                                items += ""</table>"";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert(""faliure"");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
 ");
            WriteLiteral(@"                           //alert(""error calls"");
                            var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join(""<br />""));
                        }
                    });
                    } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
                }
            }
        }
        if ($('#application_third_value').val() != '1') {
            SearchByValues = true;
            //alert(""Works"");
            if (SearchByValues == true) {
                var number1 = parseInt($('#from').val());");
            WriteLiteral(@"
                var number2 = parseInt($('#to').val());
                if (number1 > number2) {
                    $('#error_input').html('Error! In From field, it is bigger than To field');
                } else {

                    if ($(""#frequency_table option:selected"").text() != '') {

                        $('#error_input').html('');
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 948 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("SearchOnThirdLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                ApplicatonVal: $('#application_third_value').val()

                            },
                            success: function (response) {

                                if (Object.keys(response).length == 0) {
                                    //alert('poruka' + Object.keys(response).length);
                                    //$('#rData').load('Index.cshtml');
                                    $('#rData').empty();
                                    var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region ");
            WriteLiteral(@"code</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
                                    var isThereDocs = false;
                                    var isThereStands = false;
                                    var Docs = """";
                                    var Stand = """";
                                    var isThereDocsInf = false;
                                    var isThereStandsInf = false;
                                    var DocsInf = """";
                                    va");
            WriteLiteral(@"r StandInf = """";
                                    var incResponse = 0;
                                    $.each(response, function (i, generalTemp) {
                                        items += ""<tr><td>"" + generalTemp.LowView + ""-"" + generalTemp.HighView + ""</td><td> "";
                                        if (incResponse == 0) {
                                            incResponse++;

                                            if (generalTemp.isAllValues) {

                                                setTimeout(function () {
                                                    //alert();
                                                    $('#frequencySize').val(generalTemp.sizeFrequency).change();
                                                    $('#from').val(generalTemp.lowJson);
                                                    $('#to').val(generalTemp.highJson);

                                                }, 200);

                                        ");
            WriteLiteral(@"    }

                                        } else if (incResponse > 0) {

                                        }
                                        $.each(generalTemp.Application, function (i, member) {
                                            if (!member.isDeletedApp) {
                                            items += ""<p>"" + member.Application;
                                            isThereDocs = false;
                                            isThereStands = false;
                                            Docs = """";
                                            Stand = """";
                                            isThereDocsInf = false;
                                            isThereStandsInf = false;
                                            DocsInf = """";
                                            StandInf = """";
                                            if (Object.keys(member.DocumentsAditional).length > 0) {

                                      ");
            WriteLiteral(@"          for (var tt = 0; tt < member.DocumentsAditional.length; tt++) {
                                                    if (tt == Object.keys(member.DocumentsAditional).length - 1) {
                                                        if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                            Docs += member.DocumentsAditional[tt].DocumentId;
                                                            isThereDocs = true;
                                                        } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                            DocsInf += member.DocumentsAditional[tt].DocumentId;
                                                            isThereDocsInf = true;
                                                        }
                                                    }
                                                    else {
                               ");
            WriteLiteral(@"                         if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                            Docs += member.DocumentsAditional[tt].DocumentId + "","";
                                                            isThereDocs = true;
                                                        } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                            DocsInf += member.DocumentsAditional[tt].DocumentId + "","";
                                                            isThereDocsInf = true;
                                                        }

                                                    }
                                                }
                                            } else {
                                                isThereDocs = false;
                                                isThereDocsInf = false;
                                            }
    ");
            WriteLiteral(@"                                        if (Object.keys(member.StandardsAditional).length > 0) {

                                                for (var tt = 0; tt < member.StandardsAditional.length; tt++) {
                                                    if (tt == Object.keys(member.StandardsAditional).length - 1) {
                                                        if (member.StandardsAditional[tt].isRegulatory == true) {
                                                            Stand += member.StandardsAditional[tt].StandardId;
                                                            isThereStands = true;
                                                        } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                            StandInf += member.StandardsAditional[tt].StandardId;
                                                            isThereStandsInf = true;
                                                        }

");
            WriteLiteral(@"                                                    }
                                                    else {
                                                        if (member.StandardsAditional[tt].isRegulatory == true) {
                                                            Stand += member.StandardsAditional[tt].StandardId + "","";
                                                            isThereStands = true;
                                                        } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                            StandInf += member.StandardsAditional[tt].StandardId + "","";
                                                            isThereStandsInf = true;
                                                        }

                                                    }
                                                }
                                            } else {
                                          ");
            WriteLiteral(@"      isThereStands = false;
                                                isThereStandsInf = false;
                                            }
                                            if (isThereDocs && !isThereStands) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";

                                            }
                                            else if (!isThereDocs && isThereStands) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                  ");
            WriteLiteral(@"          }
                                            else if (isThereDocs && isThereStands) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                            }

                                            if (member.Comment != """") {
                                                items += ""&nbsp&nbsp<button style=\""width: 100px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""NotesClick('"" + member.Comment + ""'); return false;\"">Notes</button>"";
                                            }
                                            if (isThereDocsInf && !isThereStandsInf) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color");
            WriteLiteral(@": #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";

                                            }
                                            else if (!isThereDocsInf && isThereStandsInf) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                            }
                                            else if (isThereDocsInf && isThereStandsInf) {
                                                items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + """);
            WriteLiteral(@"','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                            }
                                            //


                                            Docs = """";
                                            Stand = """";
                                            DocsInf = """";
                                            StandInf = """";
                                            isThereDocsInf = false;
                                            isThereStandsInf = false;
                                            isThereDocs = false;
                                            isThereStands = false;
                                        }
                                        });
                                        items += ""</p><br/>"";


                                        items += ""</td>"" + ""<td>"" + generalTemp.regionCode + ""</td></tr>"";
                                   ");
            WriteLiteral(@" });

                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.joi");
            WriteLiteral(@"n(""<br />""));
                            }
                        });
                    } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
                }
            }
        }
        if (SearchByValues == false) {
           // alert(""Work vvvv"" + $(""#frequency_table option:selected"").text());
            var number1 = parseInt($('#from').val());
            var number2 = parseInt($('#to').val());
            if (number1 > number2) {
                $('#error_input').html('Error! In From field, it is bigger than To field');
            } else {
                if ($(""#frequency_table option:selected"").text() != '') {
                    $('#error_input').html('');
                    //alert(""Work vvvv"");
                    $.ajax({
                        type: ""POST"",
                        url: """);
#nullable restore
#line 1151 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                         Write(Url.Action("GeneralSearch"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                        data: {
                            FromVal: $('#from').val(),
                            ToVal: $('#to').val(),
                            FrequencySizeVal: $('#frequencySize').val(),
                            FrequencyTableVal: $(""#frequency_table option:selected"").text()

                        },
                        success: function (response) {

                            if (Object.keys(response).length == 0) {
                                alert('poruka' + Object.keys(response).length);
                                //$('#rData').load('Index.cshtml');
                                $('#rData').empty();
                                var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
                                itemsO += ""</table>"";

                                $('#rData').append(itemsO).h");
            WriteLiteral(@"ide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();

                                //alert(""Work vvvv"");  --
                                var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Frequency</th><th>Application</th><th>Region code</th></tr>"";
                                var isThereDocs = false;
                                var isThereStands = false;
                                var Docs = """";
                                var Stand = """";
                                var isThereDocsInf = false;
                                var isThereStandsInf = false;
                                var DocsInf = """";
                                var StandInf = """";
                                var incResponse = 0;
                                $.each(response, function (i, ");
            WriteLiteral(@"generalTemp) {
                                    if (incResponse == 0) {
                                        incResponse++;

                                        if (generalTemp.isAllValues) {

                                            setTimeout(function () {
                                                //alert();
                                                $('#frequencySize').val(generalTemp.sizeFrequency).change();
                                                $('#from').val(generalTemp.lowJson);
                                                $('#to').val(generalTemp.highJson);

                                            }, 200);

                                        }

                                    } else if (incResponse > 0) {

                                    }
                                        items += ""<tr><td>"" + generalTemp.LowView + ""-"" + generalTemp.HighView + ""</td><td>"";

                                    $.each(generalTemp.Applicati");
            WriteLiteral(@"on, function (i, member) {
                                        if (!member.isDeletedApp) {
                                        items += ""<p>"" + member.Application;
                                        isThereDocs = false;
                                        isThereStands = false;
                                        Docs = """";
                                        Stand = """";
                                        isThereDocsInf = false;
                                        isThereStandsInf = false;
                                        DocsInf = """";
                                        StandInf = """";
                                        if (Object.keys(member.DocumentsAditional).length > 0) {

                                            for (var tt = 0; tt < member.DocumentsAditional.length; tt++) {
                                                if (tt == Object.keys(member.DocumentsAditional).length - 1) {
                                                    if");
            WriteLiteral(@" (member.DocumentsAditional[tt].isRegulatory == true) {
                                                        Docs += member.DocumentsAditional[tt].DocumentId;
                                                        isThereDocs = true;
                                                    } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                        DocsInf += member.DocumentsAditional[tt].DocumentId;
                                                        isThereDocsInf = true;
                                                    }
                                                }
                                                else {
                                                    if (member.DocumentsAditional[tt].isRegulatory == true) {
                                                        Docs += member.DocumentsAditional[tt].DocumentId + "","";
                                                        isThereDocs = true;
           ");
            WriteLiteral(@"                                         } else if (member.DocumentsAditional[tt].isRegulatory == false) {
                                                        DocsInf += member.DocumentsAditional[tt].DocumentId + "","";
                                                        isThereDocsInf = true;
                                                    }

                                                }
                                            }
                                        } else {
                                            isThereDocs = false;
                                            isThereDocsInf = false;
                                        }
                                        if (Object.keys(member.StandardsAditional).length > 0) {

                                            for (var tt = 0; tt < member.StandardsAditional.length; tt++) {
                                                if (tt == Object.keys(member.StandardsAditional).length - 1) {
                ");
            WriteLiteral(@"                                    if (member.StandardsAditional[tt].isRegulatory == true) {
                                                        Stand += member.StandardsAditional[tt].StandardId;
                                                        isThereStands = true;
                                                    } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                        StandInf += member.StandardsAditional[tt].StandardId;
                                                        isThereStandsInf = true;
                                                    }

                                                }
                                                else {
                                                    if (member.StandardsAditional[tt].isRegulatory == true) {
                                                        Stand += member.StandardsAditional[tt].StandardId + "","";
                                         ");
            WriteLiteral(@"               isThereStands = true;
                                                    } else if (member.StandardsAditional[tt].isRegulatory == false) {
                                                        StandInf += member.StandardsAditional[tt].StandardId + "","";
                                                        isThereStandsInf = true;
                                                    }

                                                }
                                            }
                                        } else {
                                            isThereStands = false;
                                            isThereStandsInf = false;
                                        }
                                        if (isThereDocs && !isThereStands) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + S");
            WriteLiteral(@"tand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";

                                        }
                                        else if (!isThereDocs && isThereStands) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                        }
                                        else if (isThereDocs && isThereStands) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValues('"" + Docs + ""','"" + Stand + ""','"" + isThereDocs + ""','"" + isThereStands + ""'); return false; \"">Regulatory docs</button>"";
                                        }

           ");
            WriteLiteral(@"                             if (member.Comment != """") {
                                            items += ""&nbsp&nbsp<button style=\""width: 100px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onClick=\""NotesClick('"" + member.Comment + ""'); return false;\"">Notes</button>"";
                                        }
                                        if (isThereDocsInf && !isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";

                                        }
                                        else if (!isThereDocsInf && isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin");
            WriteLiteral(@"-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                        }
                                        else if (isThereDocsInf && isThereStandsInf) {
                                            items += ""&nbsp&nbsp<button style=\""width: 150px; background-color: #008CBA; margin-top:5px; margin-bottom:5px;\"" onclick=\""ShowAllValuesInf('"" + DocsInf + ""','"" + StandInf + ""','"" + isThereDocsInf + ""','"" + isThereStandsInf + ""'); return false; \"">Informative docs</button>"";
                                        }
                                        //


                                        Docs = """";
                                        Stand = """";
                                        DocsInf = """";
                                        StandInf = """";
                                        isThereDocsInf = false;
                    ");
            WriteLiteral(@"                    isThereStandsInf = false;
                                        isThereDocs = false;
                                        isThereStands = false;
                                    }
                                                });
                                                items += ""</p><br/>"";


                                                items +=""</td>"" +""<td>"" + generalTemp.regionCode + ""</td></tr>"";
                                            });

                                            items += ""</table>"";

                                            $('#rData').append(items).hide().fadeIn(2000);

                            }
                        }
                        ,
                        failure: function (response) {
                            alert(""faliure"");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert(""greska"");*/
             ");
            WriteLiteral(@"               var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join(""<br />""));
                        }
                    });
                } else {
                    $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                }
            }
        }
    }
    function InputAction(e) {
        //alert(""You pressed a key inside the input field"");
        var evt = (e) ? e : window.event;
        var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
        if (charCode == 144 || charCode == 12 || charCode == 8) {
            return true;
        }
        if");
            WriteLiteral(@" ((charCode >= 96 && charCode <= 105) || (charCode >= 48 && charCode <= 57)) {
            return true;
        } else {
            return false;
            //alert(""You pressed a key inside the input field"");
        }
    }
    function FirstChange() {
        //alert(""Works"");
        if ($('#application_first_value').val() != '1') {
            $('#application_two_value').val('1').change();
            $('#application_third_value').val('1').change();
            $('#allocation_fourth_value').val('1').change();
        }
    }

    function SecondChange() {
        //alert(""Works"");
        if ($('#application_two_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_third_value').val('1').change();
            $('#allocation_fourth_value').val('1').change();
        }
    }

    function ThirdChange() {
        //alert(""Works"");
        if ($('#application_third_value').val() != '1') {
            $('#application_firs");
            WriteLiteral(@"t_value').val('1').change();
            $('#application_two_value').val('1').change();
            $('#allocation_fourth_value').val('1').change();
        }
    }
    var modal = document.getElementById(""myModal"");

    var span = document.getElementsByClassName(""close"")[0];

    function dialogue_box() {
        modal.style.display = ""block"";
    }


    function PresentNotes(element) {
        showModal(""Technology"", element);
    }

    function showModal(titleHtml, contentHtml) {
        const modal = document.createElement(""div"");

        modal.classList.add(""modal_u_app"");
        modal.innerHTML = `
        <div class=""modal__inner"">
            <div class=""modal__top"">
                <div class=""modal__title"">${titleHtml}</div>
                <button class=""modal__close"" type=""button"">
                    <span class=""material-icons"">close</span>
                </button>
            </div>
            <div class=""modal__content"">${contentHtml}</div>
            <di");
            WriteLiteral(@"v class=""modal__bottom""></div>
        </div>`;

        modal.querySelector("".modal__close"").addEventListener(""click"", () => {
            document.body.removeChild(modal);
        });

        document.body.appendChild(modal);
    }

    function handleChangeAppAll(src) {
        if (src.value == 'Hierarchical') {

             $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 1423 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("OrderByHierarchical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + generalTemp.Number,
                                           ");
            WriteLiteral(@"     html: ""all application terms""
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: """" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));

                                            } else {
                                                values.");
            WriteLiteral(@"append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object inst");
            WriteLiteral(@"ead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });


        } else {
            $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 1490 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("OrderByAlphabetical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + incremen");
            WriteLiteral(@"t,
                                                html: ""all application terms""
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: """" + increment,
                                                html: ""<p>"" + generalTemp.name + ""</p>""
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                           ");
            WriteLiteral(@"     /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
        }
    }

    function RunSearch() {
        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 1548 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                             Write(Url.Action("GeneralSearch"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            data: {
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text()
                            },
                             success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();

                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th width='200px' style='text-align:center'></th><th>Duplex</th><th width='400px'>Frequency band</th><th>Application</th><th>Licence holder</th>"";
                                    items += ""<th>Start date</th><th>Expiry date</th><th>Transmitter location information</th><th>Spectrum Trading</th><th>Short Comments</th></tr>"";

                                    items += ""</table>"";

                 ");
            WriteLiteral(@"                   $('#rData').append(items).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th width='200px' style='text-align:center'></th><th>Duplex</th><th width='400px'>Frequency band</th><th>Application</th><th>Licence holder</th>"";
                                    items += ""<th>Start date</th><th>Expiry date</th><th>Transmitter location information</th><th>Spectrum Trading</th><th>Short Comments</th></tr>"";

                                    $.each(response, function (i, generalTemp) {

                                        items += ""<tr><td style='width: 100px;'>"" + generalTemp.Country + ""</td>"";
                                        items += ""<td>"" + generalTemp.Duplex + ""</td>""");
            WriteLiteral(@"
                                        items += ""<td style='width: 400px;'>"" + generalTemp.FrequencyBand + ""</td>"";
                                        if (generalTemp.Technology != """") {
                                            items += ""<td><a onclick=\""PresentNotes('"" + generalTemp.Application + ""'); return false;\"" style='text-decoration: underline;'>"" + generalTemp.Technology + ""</a></td>"";
                                        } else {
                                            items += ""<td>"" + generalTemp.Technology + ""</td>"";
                                        }
                                        if (generalTemp.LicenceHolderLink != """") {
                                            items += ""<td><a onclick=\""PresentNotes('"" + generalTemp.LicenceHolderLink + ""'); return false;\"" style='text-decoration: underline;'>"" + generalTemp.LicenceHolder + ""</a></td>"";
                                        } else {
                                            items += ""<td>"" + gen");
            WriteLiteral(@"eralTemp.LicenceHolder + ""</td>"";
                                        }
                                        items += ""<td>"" + generalTemp.StartDate + ""</td>"";
                                        items += ""<td>"" + generalTemp.ExpiryDate + ""</td>"";

                                        if (generalTemp.LocationLink != """")
                                        {
                                            items += ""<td><a onclick=\""PresentNotes('"" + generalTemp.LocationLink + ""'); return false;\"" style='text-decoration: underline;'>"" + generalTemp.Location + ""</a></td>"";
                                        }
                                        else
                                        {
                                            items += ""<td>"" + generalTemp.Location+""</td>"";
                                        }
                                        items += ""<td>"" + generalTemp.SpectrumTrading+""</td>"";
                                        items += ""<td>"" + gen");
            WriteLiteral(@"eralTemp.ShortComment+""</td>"";
                    
                                        items +=""</tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                 ");
            WriteLiteral(@"   errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
    }


    $(function () {
        $('#download_pdf').click(function () {
            var selected = $(""#frequency_table :selected"").map((_, e) => e.value).get();
            $.ajax({
                type: ""POST"",
                url: """);
#nullable restore
#line 1634 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                 Write(Url.Action("DownloadPDF", "RightOfUse"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $(""#frequency_table option:selected"").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {

                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'pdf' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.");
            WriteLiteral(@"createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.pdf';

                    // Programmatically trigger the download
                    link.click();


                },
                failure: function (response) {
                    alert(""Failure: An error occurred while making the AJAX request."");
                },
                error: function (response) {
                    alert(""Error: An error occurred while making the AJAX request."");
                }
            });
        });

        $('#download_excel').click(function () {
            $.ajax({
                type: ""POST"",
                url: """);
#nullable restore
#line 1678 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                 Write(Url.Action("DownloadExcel", "RightOfUSe"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $(""#frequency_table option:selected"").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {
                    // Create a Blob from the response data
                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

                    // Create a tempora");
            WriteLiteral(@"ry link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.xlsx';

                    // Programmatically trigger the download
                    link.click();
                },
                failure: function (response) {
                    alert(""Failure: An error occurred while making the AJAX request."");
                },
                error: function (response) {
                    alert(""Error: An error occurred while making the AJAX request."");
                }
            });
        });
    });

</script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3124985", async() => {
                WriteLiteral("\r\n    <div class=\"centerpanel\">\r\n        <div class=\"left>Application</div>\r\n    </div>\r\n    <div class=\"right\">\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3125378", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    </div>
    </div>

    <br />
    <div style=""background-color: white; width: 70%; margin-top: 30px; padding-top:30px;"" class=""center"">
        <br />
        <div class=""form-group center_top_menu"" style=""width: 90%; height:100%"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3126902", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#nullable restore
#line 1732 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.Frequency);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3128673", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 1735 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.From);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 1735 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                                                            WriteLiteral(TempData["fromTempValue"]);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3131867", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 1739 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.To);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 1739 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                                                          WriteLiteral(TempData["toTempValue"]);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n\r\n");
#nullable restore
#line 1743 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
             if (Model != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 1745 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                 if (Model.Count() > 0)
                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3135642", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1749 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1749 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = rightOfUseService.FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1751 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                }
                else
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3138386", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1755 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1755 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = rightOfUseService.FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1757 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1757 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                 


            }
            else
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3141361", async() => {
                    WriteLiteral("\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1763 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1763 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = rightOfUseService.FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1765 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"

            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"        </div>
        
        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px;""></label>
            <p> &nbsp &nbsp</p>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarc"" onchange=""handleChangeAppAll(this);"" value=""Hierarchical""/> Hierarchical
            </div>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarc"" onchange=""handleChangeAppAll(this);"" value=""Alphabetical""/> Alphabetical
            </div>
            <p> &nbsp &nbsp</p>
            <div id=""abbr""><a href=""#"" onClick=""LinkClick(); return false;"">Abbreviations</a></div>
            </div>
            <div class=""center_top_menu"" style=""width: 50%; height:100%"">
                <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
                <p> &nbsp &nbsp</p>
             ");
                WriteLiteral("   ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3145055", async() => {
                    WriteLiteral("\r\n                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3145345", async() => {
                        WriteLiteral("&lt;all application terms &gt;");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
#nullable restore
#line 1785 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.ApplicationAllValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            </div>\r\n            <div class=\"center_top_menu\" style=\"width: 50%; height:100%\">\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3148310", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
#nullable restore
#line 1790 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencyTable);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                <p> &nbsp &nbsp</p>\r\n");
#nullable restore
#line 1792 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                 if (Model != null)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 1794 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                     if (Model.Count() > 0)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3150782", async() => {
                    WriteLiteral("\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
#nullable restore
#line 1797 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1797 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.ElementAt(0).FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("multiple", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1799 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3153872", async() => {
                    WriteLiteral("\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
#nullable restore
#line 1803 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1803 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = rightOfUseService.FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("multiple", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1805 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1805 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                     
                }
                else
                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f53b53699432f4ebc75aa6e96c9ccf9a632323f3157198", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
#nullable restore
#line 1811 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => rightOfUseService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1811 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = rightOfUseService.FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("multiple", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1813 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
            </div>
            <br />
            <br />
            <p> &nbsp &nbsp</p>

            <div class=""center_top_menu"" style=""width: 50%; height:100%"">
                <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; width:150px;""></label>

                <button type=""submit"" id=""searh_now"" class=""btn btn-primary"" style=""width: 40%; background-color: darkseagreen;"" onclick=""RunSearch()"">Search</button>
            </div>
            <br />
            <p> &nbsp &nbsp</p>
        </div>
    <br />

    <br />
    <div id=""print_div"" class=""center""");
                BeginWriteAttribute("style", " style=\"", 107871, "\"", 107928, 1);
#nullable restore
#line 1831 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
WriteAttributeValue("", 107879, showDiv ? "display: block;" : "display: none;", 107879, 49, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
        <div class=""center_top_menu center"" style=""width: 40%; height:100%"">
            <button type=""submit"" id=""download_excel"" class=""btn btn-secondary center"" style=""width: 50%; background-color: limegreen; margin: 5px;"">
                <i class=""fas fa-file-excel""></i>Download Excel
            </button>
            <button type=""submit"" id=""download_pdf"" class=""btn btn-secondary center"" style=""width: 50%; background-color: red; margin: 5px;"">
                <i class=""fas fa-file-pdf""></i> Download PDF
            </button>
        </div>
    </div>
    <br />

    <p id=""docsHidden"" style=""visibility:hidden;""></p>
    <div id=""rData"" class=""center"">
");
#nullable restore
#line 1845 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
         if (Model != null)
        {
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 1847 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
             if (Model.Count() > 0)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                <table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'>
                    <tr>
                        <th width=""200px"" style=""text-align:center""></th>
                        <th>Duplex</th>
                        <th width=""400px"">Frequency band</th>
                        <th>Application</th>
                        <th>Licence holder</th>
                        <th>Start date</th>
                        <th>Expiry date</th>
                        <th>Transmitter location information</th>
                        <th>Spectrum Trading</th>
                        <th>Short Comments</th>
                    </tr>


");
#nullable restore
#line 1864 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                     foreach (FrekvencijeProject.Models.RightOfUse.RightOfUseView i in Model)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <tr>\r\n                    <td>");
#nullable restore
#line 1867 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.Country);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n\r\n                    <td>\r\n                        ");
#nullable restore
#line 1870 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.Duplex);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:350px;\">\r\n                        ");
#nullable restore
#line 1873 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.FrequencyBand);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:150px;\">\r\n\r\n");
#nullable restore
#line 1877 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                         if (i.Technology != "")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <a");
                BeginWriteAttribute("onclick", " onclick=\"", 109968, "\"", 110023, 5);
                WriteAttributeValue("", 109978, "PresentNotes(\'", 109978, 14, true);
#nullable restore
#line 1879 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
WriteAttributeValue("", 109992, i.Application, 109992, 14, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 110006, "\');", 110006, 3, true);
                WriteAttributeValue(" ", 110009, "return", 110010, 7, true);
                WriteAttributeValue(" ", 110016, "false;", 110017, 7, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"text-decoration: underline;\">");
#nullable restore
#line 1879 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                                                                                                      Write(i.Technology);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 1880 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                        }
                        else
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 1883 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                       Write(i.Technology);

#line default
#line hidden
#nullable disable
#nullable restore
#line 1883 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                         
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </td>\r\n                    <td>\r\n\r\n");
#nullable restore
#line 1888 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                         if (i.LicenceHolderLink != "")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <a");
                BeginWriteAttribute("onclick", " onclick=\"", 110403, "\"", 110464, 5);
                WriteAttributeValue("", 110413, "PresentNotes(\'", 110413, 14, true);
#nullable restore
#line 1890 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
WriteAttributeValue("", 110427, i.LicenceHolderLink, 110427, 20, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 110447, "\');", 110447, 3, true);
                WriteAttributeValue(" ", 110450, "return", 110451, 7, true);
                WriteAttributeValue(" ", 110457, "false;", 110458, 7, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"text-decoration: underline;\">");
#nullable restore
#line 1890 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                                                                                                            Write(i.LicenceHolder);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 1891 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                        }
                        else
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 1894 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                       Write(i.LicenceHolder);

#line default
#line hidden
#nullable disable
#nullable restore
#line 1894 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                            
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 1898 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.StartDate);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 1901 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.ExpiryDate);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n");
#nullable restore
#line 1904 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                         if (i.LocationLink != "")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <a");
                BeginWriteAttribute("onclick", " onclick=\"", 111026, "\"", 111082, 5);
                WriteAttributeValue("", 111036, "PresentNotes(\'", 111036, 14, true);
#nullable restore
#line 1906 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
WriteAttributeValue("", 111050, i.LocationLink, 111050, 15, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 111065, "\');", 111065, 3, true);
                WriteAttributeValue(" ", 111068, "return", 111069, 7, true);
                WriteAttributeValue(" ", 111075, "false;", 111076, 7, true);
                EndWriteAttribute();
                WriteLiteral(" style=\"text-decoration: underline;\">");
#nullable restore
#line 1906 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                                                                                                       Write(i.Location);

#line default
#line hidden
#nullable disable
                WriteLiteral("</a>\r\n");
#nullable restore
#line 1907 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                        }
                        else
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 1910 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                       Write(i.Location);

#line default
#line hidden
#nullable disable
#nullable restore
#line 1910 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                                       
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 1914 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.SpectrumTrading);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td>\r\n                        ");
#nullable restore
#line 1917 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                   Write(i.ShortComment);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");
#nullable restore
#line 1920 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n\r\n                </table>\r\n");
#nullable restore
#line 1924 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"

            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1925 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\RightOfUse\Index.cshtml"
             
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n    </div>\r\n    <div>\r\n        <h4 id=\"error_input\" style=\"color: red; text-align: center; font-weight: bold; font-family: Roboto; font-size: 33px; \"></h4>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public FrekvencijeProject.Controllers.RightOfUseController rightOfUseService { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<FrekvencijeProject.Models.RightOfUse.RightOfUseView>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
