#pragma checksum "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "65f7b3652afae16f04714a4e7a00b57ca55db533"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Interfaces_Index), @"mvc.1.0.view", @"/Views/Interfaces/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\_ViewImports.cshtml"
using FrekvencijeProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\_ViewImports.cshtml"
using FrekvencijeProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65f7b3652afae16f04714a4e7a00b57ca55db533", @"/Views/Interfaces/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be0eb2b377f6ff7efb6af5254ff59709e7a66500", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Interfaces_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<FrekvencijeProject.Models.Interfaces.InterfacesView>>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Palestina.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("80px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("50px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("search_by"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:150px; font-weight: bold; font-family: Roboto; font-size: 13px; height: 35px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("from"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-label", new global::Microsoft.AspNetCore.Html.HtmlString("From"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control text-box single-line"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-val-maxlength-max", new global::Microsoft.AspNetCore.Html.HtmlString("30"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 30%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border: solid;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("From"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "number", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onkeydown", new global::Microsoft.AspNetCore.Html.HtmlString("return  InputAction(event)"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("to"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-label", new global::Microsoft.AspNetCore.Html.HtmlString("To"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("placeholder", new global::Microsoft.AspNetCore.Html.HtmlString("To"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frequencySize"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 20%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("application_first_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("FirstChange()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("application_second_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("SecondChange()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("application_third_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("ThirdChange()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("app_all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid; border-width: 3px; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("allocation_first_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("FirstChangeAll()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("allocation_second_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("SecondChangeAll()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("allocation_third_value"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("ThirdChangeAll()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("allc_all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("font-weight: bold; font-family: Roboto; font-size: 13px; width:150px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("FrequencytableValue"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frequency_table"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 80%; font-weight: bold; font-family: Arial, Helvetica, sans-serif; font-size: 13px; border-style: solid; border-width: 3px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_39 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_40 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("size", new global::Microsoft.AspNetCore.Html.HtmlString("8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_41 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/smalldocument.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_42 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("content_container_body"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
  
    bool showDiv = (Model != null); // Set this value based on your condition

#line default
#line hidden
#nullable disable
            WriteLiteral("<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\">\r\n</script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db53320398", async() => {
                WriteLiteral(@"
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 24 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
 if (Model != null)
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
     if (Model.Count() > 0)
    {


#line default
#line hidden
#nullable disable
            WriteLiteral("        <script type=\"text/javascript\">\r\n     //alert(\'test\');\r\n\r\n    setTimeout(function () {\r\n        //your code here\r\n\r\n        //var value = ;\r\n        //alert(\'ucitao sam:\' + value);\r\n        $(\'#frequencySize\').val(");
#nullable restore
#line 37 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                           Write(Model.ElementAt(0).FrequencySizeValue);

#line default
#line hidden
#nullable disable
            WriteLiteral(").change();\r\n    }, 500);\r\n        </script>\r\n");
#nullable restore
#line 40 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 40 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script type=""text/javascript"">
    var DocString = """";
    function LinkClick() {
        //alert('Does this work?'+e);

        var value = 'ADS    Automatic Dependant Surveillance (Aeronautical)<br/>';
        value += 'AES	    Aircraft Earth Station<br/>';
        value += 'AGA       Air-Ground-Air<br/>';
        value += 'AIS	    Universal Shipborne Automatic Identification System<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'ALS	    Assistive Listening Systems<br/>';
        value += 'AM	    Amplitude Modulation<br/>';
        value += 'AMRD	    Autonomous Maritime Radio Device<br/>';
        value += 'ALD	    Assistive Listening Devices<br/>';
        value += 'ASDE	    Airport Surface Detection Equipment<br/>';
        value += 'BBDR	    Broad Band Disaster Relief<br/>';
        value += 'BFWA	    Broadband Fixed Wireless Access<br/>';
        value += 'BWA	    Broadband Wireless Access<br/>';
        value += 'CB	    Citizens Band<br/>';
  ");
            WriteLiteral(@"      value += 'CGC	    Complementary Ground Component<br/>';
        value += 'CT	    Cordless Telephone<br/>';
        value += 'DA2GC	    Direct Air-to-Ground Communications<br/>';
        value += 'DECT	    Digital Enhanced Cordless Telecommunications<br/>';
        value += 'D-GPS	    Differential Global Positioning System<br/>';
        value += 'DME	    Distance Measuring Equipment<br/>';
        value += 'DRM	    Digital Radio Mondiale<br/>';
        value += 'DSC	    Digital Selective Calling<br/>';
        value += 'DVB-T	    Digital Video Broadcasting – Terrestrial<br/>';
        value += 'ELT	    Emergency locator transmitter<br/>';
        value += 'ENG/OB	Electronic News Gathering / Outside Broadcasting<br/>';
        value += 'EPIRBs	Emergency Position Indicating Radio Beacons<br/>';
        value += 'ESIM	    Earth Stations In-Motion<br/>';
        value += 'ESOMPs	Earth Stations On Mobile Platforms<br/>';
        value += 'ESV	    Earth Stations on-board Vessels<br/>';
        ");
            WriteLiteral(@"value += 'FM	    Frequency Modulation<br/>';
        value += 'FRMCS	    Future Railway Mobile Communication System<br/>';
        value += 'FSS	    Fixed-Satellite Service<br/>';
        value += 'FWA	    Fixed Wireless Access<br/>';
        value += 'GBAS	    Ground Based Augmentation System<br/>';
        value += 'GBSAR	    Ground Based Synthetic Aperture Radar<br/>';
        value += 'GLONASS	Globalnaya Navigatsionnaya Sputnikovaya Sistema<br/>';
        value += 'GMDSS	    Global Maritime Distress and Safety System<br/>';
        value += 'GNSS	    Global Navigation Satellite System<br/>';
        value += 'GNSS      Pseudolites	Global Navigation Satellite System Pseudolites<br/>';
        value += 'GPR	    Ground Probing Radar<br/>';
        value += 'GPS	    Global Positioning System<br/>';
        value += 'GSM	    Global System for Mobile Communications<br/>';
        value += 'GSM-R	    Global System for Mobile Communications on Railways<br/>';
        value += 'GSO	    GeoStationary ");
            WriteLiteral(@"Orbit<br/>';
        value += 'HAPS	    High Altitude Platform Station<br/>';
        value += 'HEST	    High e.i.r.p. Satellite Terminal<br/>';
        value += 'IFF	    Identification Friend or Foe<br/>';
        value += 'ILS	    Instrument Landing System<br/>';
        value += 'IMT-2000	International Mobile Telecommunications-2000<br/>';
        value += 'IMT-Advanced	Systems beyond IMT-2000<br/>';
        value += 'IMT	    International Mobile Telecommunications (includes IMT-2000 and IMT-Advanced)<br/>';
        value += 'ISM	    Industrial, Scientific and Medical applications<br/>';
        value += 'ITS	    Intelligent Transport Systems<br/>';
        value += 'JTIDS	    Joint Tactical Information Distribution System<br/>';
        value += 'LAES	    Location Application for Emergency Services<br/>';
        value += 'LANs	    Local Area Networks<br/>';
        value += 'LEST	    Low e.i.r.p. Satellite Terminal<br/>';
        value += 'LP-AMI	Low Power Active Medical Implants<br/>';
  ");
            WriteLiteral(@"      value += 'LPD	    Low Power Device<br/>';
        value += 'LPR	    Level Probing Radar<br/>';
        value += 'LT2	    Location Tracking Type 2<br/>';
        value += 'MBANS	    Medical Body Area Network System<br/>';
        value += 'MBR	    Maritime Broadband Radio<br/>';
        value += 'MCA	    Mobile Communications on Board Aircraft<br/>';
        value += 'MCV	    Mobile Communication Services on Board Vessels<br/>';
        value += 'MFCN	    Mobile/Fixed Communications Networks<br/>';
        value += 'MLS	    Microwave Landing System<br/>';
        value += 'MSI	    Maritime Safety Information<br/>';
        value += 'MSS	    Mobile-Satellite Service<br/>';
        value += 'MWS	    Multimedia Wireless System<br/>';
        value += 'NAVTEX	Narrow-band direct-printing telegraphy system for transmission of navigational and meteorological warnings and urgent information to ships<br/>';
        value += 'NGSO	    Non-GeoStationary Orbit<br/>';
        value += 'NMR	    Nuclear M");
            WriteLiteral(@"agnetic Resonance applications<br/>';
        value += 'NP2M	    Narrowband Point to Multipoint system<br/>';
        value += 'PAMR	    Public Access Mobile Radio<br/>';
        value += 'PLB	    Personal Locator Beacon<br/>';
        value += 'PMR	    Private (Professional) Mobile Radio<br/>';
        value += 'PMSE	    Programme Making and Special Events<br/>';
        value += 'POCSAG	Post Office Code Standards Advisory Group<br/>';
        value += 'PPDR	    Public Protection & Disaster Relief<br/>';
        value += 'RFID	    Radio Frequency Identification<br/>';
        value += 'RLAN	    Radio Local Area Network<br/>';
        value += 'RMR	    Railway Mobile Radio<br/>';
        value += 'RTE	    Radar Target Enhancer<br/>';
        value += 'SAB	    Service Ancillary to Broadcasting<br/>';
        value += 'SAP	    Service Ancillary to Programme making<br/>';
        value += 'SAR 	    Search and Rescue<br/>';
        value += 'SATCOM	Satellite Communication<br/>';
        value += '");
            WriteLiteral(@"SIT/SUT	Satellite Interactive Terminal / Satellite User Terminal<br/>';
        value += 'SNG	    Satellite News Gathering<br/>';
        value += 'S-PCS	    Satellite - Personal Communications System<br/>';
        value += 'SRD	    Short Range Devices<br/>';
        value += 'SRR	    Short Range Radars<br/>';
        value += 'SSR	    Secondary Surveillance Radar<br/>';
        value += 'TACAN	    Tactical Air Navigation<br/>';
        value += 'T-DAB	    Terrestrial Digital Audio Broadcasting<br/>';
        value += 'TETRA	    Terrestrial Trunked Radio<br/>';
        value += 'TETRAPOL	Digital PMR technology<br/>';
        value += 'TLPR	    Tank Level Probing Radar<br/>';
        value += 'TRA-ECS	Terrestrial radio applications capable of providing electronic communications services<br/>';
        value += 'TTT	    Transport and Traffic Telematics<br/>';
        value += 'TV	    Television<br/>';
        value += 'UAS	    Unmanned Aircraft System<br/>';
        value += 'ULP-AMI	Ultra Low P");
            WriteLiteral(@"ower Active Medical Implants<br/>';
        value += 'ULP-AID	Ultra Low Power Animal Implants Devices<br/>';
        value += 'ULP-MMI	Ultra Low Power Medical Membrane Implants<br/>';
        value += 'ULP-WMCE	Ultra-Low Power Wireless Medical Capsule Endoscopy<br/>';
        value += 'VLBI	    Very Long Baseline Interferometry<br/>';
        value += 'VOR	    VHF Omnidirectional Radio Range<br/>';
        value += 'VSAT	    Very Small Aperture Terminal<br/>';
        value += 'UWB	    Ultra Wideband<br/>';
        value += 'WAIC	    Wireless Avionics Intra-Communications systems<br/>';
        value += 'WIA	    Wireless Industrial Applications<br/>';
        value += 'WPR	    Wall Probing Radar<br/>';
        value += 'WPT	    Wireless Power Transmission<br/>';


        //$('#btnfoot').trigger('click');
        showModal(""Application abbreviations"", ""<p>"" + value + ""</p>"");

    }


    function InputAction(e) {

        var evt = (e) ? e : window.event;
        var charCode = (evt.ke");
            WriteLiteral(@"yCode) ? evt.keyCode : evt.which;
        //if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        //    alert(""You pressed a key inside the input field"");
        //    return false;
        //}
        if (charCode == 144 || charCode == 12 || charCode == 8) {
            return true;
        }
        if ((charCode >= 96 && charCode <= 105) || (charCode >= 48 && charCode <= 57)) {
            return true;
        } else {
            return false;
            //alert(""You pressed a key inside the input field"");
        }

    }

    function SearchNow() {
        var div = document.getElementById(""print_div"");
        div.style.display = ""block"";
        //alert(""Works"");
        var SearchByValues = false;
        if ($('#application_first_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $("".typeDoc input:radio[name=demo]:checked"").val()
                 //alert(""Your g");
            WriteLiteral(@"ender is "" + selectedOption);
                //$('.gender input[type=""radio""]').click(function () {
                //});
                $('#error_input').html('');
                    $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 208 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchOnFirstLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                ApplicatonVal: $('#application_first_value').val(),
                                DocumentsType: $("".typeDoc input:radio[name=demo]:checked"").val(),
                                LevelApp : 1,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
 ");
            WriteLiteral(@"                               itemsO += ""</table>"";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                $.each(response, function (i, generalTemp) {

                                    items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                    if (generalTemp.Notes != """") {

                                        //alert(generalTemp.Notes);
                                        items += ""<img src=\""/images/smalldocument.gif\"" ");
            WriteLiteral(@"onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                        items += ""</td>"";
                                    } else {
                                        items += ""</td>"";
                                    }


                                    items += ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type +""</td></tr>"";

                                });
                                items += ""</table>"";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert(""faliure"");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert(""greska"");*/
                            var errorData = $.");
            WriteLiteral(@"parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join(""<br />""));
                        }
                    });

                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
        }

        if ($('#application_second_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $("".typeDoc input:radio[name=demo]:checked"").val()
                 //alert(""Your gender is "" + selectedOption);
                //$('.gender input[type=""radio""]').cl");
            WriteLiteral("ick(function () {\r\n                //});\r\n                $(\'#error_input\').html(\'\');\r\n\r\n                    $.ajax({\r\n                            type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 292 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchOnFirstLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                ApplicatonVal: $('#application_second_value').val(),
                                DocumentsType: $("".typeDoc input:radio[name=demo]:checked"").val(),
                                LevelApp : 2,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
");
            WriteLiteral(@"                                itemsO += ""</table>"";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                $.each(response, function (i, generalTemp) {

                                    items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                    if (generalTemp.Notes != """") {

                                        //alert(generalTemp.Notes);
                                        items += ""<img src=\""/images/smalldocument.gif\""");
            WriteLiteral(@" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                        items += ""</td>"";
                                    } else {
                                        items += ""</td>"";
                                    }
                                    items +=
                                        ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type +""</td></tr>"";

                                });
                                items += ""</table>"";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert(""faliure"");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert(""greska"");*/
        ");
            WriteLiteral(@"                    var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join(""<br />""));
                        }
                    });



                } else {
                        $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                    }
            }

        if ($('#application_third_value').val() != '1') {
            SearchByValues = true;

                if (SearchByValues == true) {

                   // var selectedOption = $("".typeDoc input:radio[name=demo]:checked"").val()
                 //alert(""Your gender is "" + selectedOption);
        ");
            WriteLiteral("        //$(\'.gender input[type=\"radio\"]\').click(function () {\r\n                //});\r\n                $(\'#error_input\').html(\'\');\r\n\r\n                    $.ajax({\r\n                            type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 377 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchOnFirstLevel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FromVal: $('#from').val(),
                                ToVal: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                ApplicatonVal: $('#application_third_value').val(),
                                DocumentsType: $("".typeDoc input:radio[name=demo]:checked"").val(),
                                LevelApp : 3,

                        }, success: function (response) {

                            if (Object.keys(response).length == 0) {

                                $('#rData').empty();
                                var itemsO = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
 ");
            WriteLiteral(@"                               itemsO += ""</table>"";

                                $('#rData').append(itemsO).hide().fadeIn(2000);
                            }
                            if (Object.keys(response).length > 0) {
                                $('#rData').empty();


                                var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                $.each(response, function (i, generalTemp) {

                                    items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                    if (generalTemp.Notes != """") {

                                        //alert(generalTemp.Notes);
                                        items += ""<img src=\""/images/smalldocument.gif\"" ");
            WriteLiteral(@"onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                        items += ""</td>"";
                                    } else {
                                        items += ""</td>"";
                                    }

                                    items +=
                                        ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type +""</td></tr>"";

                                });
                                items += ""</table>"";

                                $('#rData').append(items).hide().fadeIn(2000);
                            }

                        }
                        ,
                        failure: function (response) {
                            alert(""faliure"");
                        },
                        error: function (xhr, textStatus, exceptionThrown) {
                            /*alert(""greska"");*/
       ");
            WriteLiteral(@"                     var errorData = $.parseJSON(xhr.responseText);
                            var errorMessages = [];
                            //this ugly loop is because List<> is serialized to an object instead of an array
                            for (var key in errorData) {
                                errorMessages.push(errorData[key]);
                            }
                            $('#error_input').html(errorMessages.join(""<br />""));
                        }
                    });
                } else {
                     $('#error_input').html('Error! You didn\'t select any value from field frequency table');
                }
        }
        if (SearchByValues == false) {
            $(""#frequency_table :selected"").each(function () {
                if ($('#all_document_type').val() != '1') {

                    //alert(this.value);
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val())");
            WriteLiteral(";\r\n                    if (isNaN(number1) && isNaN(number2)) {\r\n                        $.ajax({\r\n                            type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 456 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchAllDocType"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name=""demo""]:checked').val(),
                                AbbrValue: $('input[name=""abbreviation""]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                ");
            WriteLiteral(@"                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                    $.each(response, function (i, generalTemp) {

                                        items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                        if (generalTemp.Notes != """") {

                                            //alert(generalTemp.Notes);
                                            items += ""<img src=\""/images/smalldocument.gif\"" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                    ");
            WriteLiteral(@"        items += ""</td>"";
                                        } else {
                                            items += ""</td>"";
                                        }

                                        items +=
                                            ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type + ""</td></tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parse");
            WriteLiteral(@"JSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 522 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchDocumentByType"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val(),
                                DocumentType: $('#all_document_type').val(),
                                RadioValue: $('input[name=""demo""]:checked').val(),
                                AbbrValue: $('input[name=""abbreviation""]:checked').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Appl");
            WriteLiteral(@"ication</th><th>Type</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                    $.each(response, function (i, generalTemp) {

                                        items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                        if (generalTemp.Notes != """") {

                                            //alert(generalTemp.Notes);
              ");
            WriteLiteral(@"                              items += ""<img src=\""/images/smalldocument.gif\"" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                            items += ""</td>"";
                                        } else {
                                            items += ""</td>"";
                                        }

                                        items +=
                                            ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type + ""</td></tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                           ");
            WriteLiteral(@" },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
                    }
                } else {
                    var number1 = parseInt($('#from').val());
                    var number2 = parseInt($('#to').val());
                    if (isNaN(number1) && isNaN(number2)) {
                        $.ajax({
                            type: ""POST"",
   ");
            WriteLiteral("                         url: \"");
#nullable restore
#line 593 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchAllDoc"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table");
            WriteLiteral(@"-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                    $.each(response, function (i, generalTemp) {

                                        items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                        if (generalTemp.Notes != """") {

                                            //alert(generalTemp.Notes);
                                            items += ""<img src=\""/images/smalldocument.gif\"" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                            items += ""</td>"";
                                        } else {
                                            items += ""</td>"";
                                        }

                                        items +=
                ");
            WriteLiteral(@"                            ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type + ""</td></tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorD");
            WriteLiteral(@"ata) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
                    }
                    else {
                        //alert('rrr:' + $('#frequencySize').val());
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 657 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("SearchDocument"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                FrequencyTableVal: $(""#frequency_table option:selected"").text(),
                                tempFrom: $('#from').val(),
                                tempTo: $('#to').val(),
                                FrequencySizeVal: $('#frequencySize').val()
                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";
                                    itemsO += ""</table>"";

                                    $('#rData').append(itemsO).hide().fadeIn(2000);
                                }
                                if (Ob");
            WriteLiteral(@"ject.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Description of document/title</th><th>Frequency band</th><th>Application</th><th>Type</th></tr>"";

                                    $.each(response, function (i, generalTemp) {

                                        items += ""<tr><td><a href='"" + generalTemp.Link + ""'>"" + generalTemp.CombineTitle + ""</a>&nbsp;&nbsp;&nbsp;&nbsp;"";
                                        if (generalTemp.Notes != """") {

                                            items += ""<img src=\""/images/smalldocument.gif\"" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                            items += ""</td>"";
                                        } else {
                                            items += ");
            WriteLiteral(@"""</td>"";
                                        }

                                        items +=
                                            ""<td>"" + generalTemp.FrequencyBand + ""</td><td>"" + generalTemp.Application + ""</td><td>"" + generalTemp.Type + ""</td></tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop");
            WriteLiteral(@" is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
                    }
                }
            });
        }

    }

    function PresentNotes(element) {
        //alert(""ppp:"");
        showModal(""Notes"", element);
    }

    function showModal(titleHtml, contentHtml) {
        const modal = document.createElement(""div"");
        //const modal = document.getElementById(""tempModal"");

        modal.classList.add(""modal_u_app"");
        modal.innerHTML = `
        <div class=""modal__inner"">
            <div class=""modal__top"">
                <div class=""modal__title"">${titleHtml}</div>
                <button class=""modal__close"" type=""button"">
        ");
            WriteLiteral(@"            <span class=""material-icons"">close</span>
                </button>
            </div>
            <div class=""modal__content"">${contentHtml}</div>
            <div class=""modal__bottom""></div>
        </div>`;

        modal.querySelector("".modal__close"").addEventListener(""click"", () => {
            document.body.removeChild(modal);
        });

        document.body.appendChild(modal);

    }

    function FirstChange() {
        //alert(""Works"");
        if ($('#application_first_value').val() != '1') {
            $('#application_second_value').val('1').change();
            $('#application_third_value').val('1').change();
        }
    }


    function FirstChangeAll() {
        if ($('#allocation_first_value').val() != '1') {
            $('#allocation_second_value').val('1').change();
            $('#allocation_third_value').val('1').change();
        }
    }

    function SecondChange() {
        //alert(""Works"");
        if ($('#application_second_value')");
            WriteLiteral(@".val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_third_value').val('1').change();

        }
    }

    function SecondChangeAll() {
        //alert(""Works"");
        if ($('#allocation_second_value').val() != '1') {
            $('#allocation_first_value').val('1').change();
            $('#allocation_third_value').val('1').change();

        }
    }

    function ThirdChange() {
        //alert(""Works"");
        if ($('#application_third_value').val() != '1') {
            $('#application_first_value').val('1').change();
            $('#application_second_value').val('1').change();

        }
    }


    function ThirdChangeAll() {
        //alert(""Works"");
        if ($('#allocation_third_value').val() != '1') {
            $('#allocation_first_value').val('1').change();
            $('#allocation_second_value').val('1').change();

        }
    }



    function handleChange(src) {
        //alert(src.value);
 ");
            WriteLiteral(@"       if (src.value == 'R') {
            $(""#all_document_type"").empty();
            var o = new Option(""<all document types - regulatory and informative documents>"", ""1"");

            //$(o).html(""< all document types - regulatory and informative documents >"");
            $(""#all_document_type"").append(o);
            var o2 = new Option(""ECC Decs/Recs"", ""2"");

            //$(o2).html(""ECC Decs/Recs"");
            $(""#all_document_type"").append(o2);
            var o3 = new Option(""Harmonised standards"", ""3"");

            //$(o3).html(""Harmonised standards"");
            $(""#all_document_type"").append(o3);
            var o4 = new Option(""Licensing info"", ""4"");

            //$(o4).html(""Licensing info"");
            $(""#all_document_type"").append(o4);
            var o5 = new Option(""NTFA"", ""5"");

            //$(o5).html(""NTFA"");
            $(""#all_document_type"").append(o5);

            var o6 = new Option(""Other"", ""6"");

            //$(o6).html(""Other"");
            $(");
            WriteLiteral(@"""#all_document_type"").append(o6);

            var o7 = new Option(""RE subclass"", ""7"");

            //$(o7).html(""Other"");
            $(""#all_document_type"").append(o7);

            var o8 = new Option(""RIS Models"", ""8"");

            //$(o8).html(""RIS Models"");
            $(""#all_document_type"").append(o8);


        } else {
            $(""#all_document_type"").empty();
            var o = new Option(""<all document types - regulatory and informative documents>"", ""1"");

            //$(o).html(""< all document types - regulatory and informative documents >"");
            $(""#all_document_type"").append(o);
            var o2 = new Option(""ECC-ECO"", ""2"");

            //$(o2).html(""ECC-ECO"");
            $(""#all_document_type"").append(o2);
            var o3 = new Option(""National"", ""3"");

            //$(o3).html(""National"");
            $(""#all_document_type"").append(o3);
            var o4 = new Option(""Third party"", ""4"");

            //$(o4).html(""Third party"");
           ");
            WriteLiteral(" $(\"#all_document_type\").append(o4);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function RunSearch() {\r\n        $.ajax({\r\n                            type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 876 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("GeneralSearch"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                            data: {
                                FrequencySizeVal: $('#frequencySize').val(),
                                FrequencyTableVal: $(""#frequency_table option:selected"").text()
                            },
                             success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $('#rData').empty();
                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Country</th><th>Radiocommunication Service</th><th>Application</th><th>Frequency band</th>"";
                                    items += ""<th>Channeling</th><th>Occupied bandwidth</th><th>Direction / Separation</th><th>Transmit Power</th></tr>"";

                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
             ");
            WriteLiteral(@"                   }
                                if (Object.keys(response).length > 0) {
                                    $('#rData').empty();


                                    var items = ""<table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'><tr><th>Country</th><th>Radiocommunication Service</th><th>Application</th><th>Frequency band</th>"";
                                    items += ""<th>Channeling</th><th>Occupied bandwidth</th><th>Direction / Separation</th><th>Transmit Power</th></tr>"";
                                    $.each(response, function (i, generalTemp) {

                                        

                                        items += ""<tr><td style='width: 100px;'>"" + generalTemp.Country + ""</td>"";
                                        items += ""<td style='width: 200px;'>"" + generalTemp.RadiocommunicationService + ""</td>"";
                                        items += ""<td style='width: 100px");
            WriteLiteral(@";'>"" + generalTemp.Application + ""</td>"";
                                        items += ""<td style='width: 100px;'>"" + generalTemp.FrequencyBand + ""</td>"";
                                        items += ""<td style='width: 100px;'>"" + generalTemp.Channeling + ""</td>"";
                                        items += ""<td style='width: 200px;'>"" + generalTemp.OccupiedBandwidth + ""</td>"";
                                        items += ""<td style='width: 200px;'>"" + generalTemp.DirectionSeparation + ""</td>"";
                                        items += ""<td style='width: 350px;'>"" + generalTemp.TransmitPower;
                                        if (generalTemp.Notes != """") {

                                            items += ""<img src=\""/images/smalldocument.gif\"" onclick=\""PresentNotes('"" + generalTemp.Notes + ""'); return false;\""></img>"";

                                            items += ""</td>"";
                                        } else {
                                 ");
            WriteLiteral(@"           items += ""</td>"";
                                        }

                                        items +=""</tr>"";

                                    });
                                    items += ""</table>"";

                                    $('#rData').append(items).hide().fadeIn(2000);
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
            ");
            WriteLiteral(@"                        errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });
    }


    


    function handleChangeAppAll(src) {
        if (src.value == 'Hierarchical') {

             $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 955 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("OrderByHierarchical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + generalTemp.Number,
                                           ");
            WriteLiteral(@"     html: ""all application terms""
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: """" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));

                                            } else {
                                                values.");
            WriteLiteral(@"append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object inst");
            WriteLiteral(@"ead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });


        } else {
            $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 1022 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("OrderByAlphabetical"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#app_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#app_all"").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#app_all"");
                                        if (generalTemp.name == ""<all application terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + incremen");
            WriteLiteral(@"t,
                                                html: ""all application terms""
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: """" + increment,
                                                html: ""<p>"" + generalTemp.name + ""</p>""
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                           ");
            WriteLiteral(@"     /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });

        }
    }

    function handleClickCheckBox(src) {
        //alert(""values:"" + src.id);
        if (src.id == ""ChannelingId""
            || src.id == ""OccupiedBandwithId""
            || src.id == ""DirectionSeparationId""
            || src.id == ""TransmitPowerId""
            || src.id == ""ChannelAccessId""
            || src.id == ""AuthorisationRegimeId""
            || src.id == ""ArtRequiermentsId""
        ");
            WriteLiteral(@"    || src.id == ""FrequencyPlanningId""
            || src.id == ""PlannedChangesId""
            || src.id == ""ReferenceId""
            || src.id == ""NotificationId""
            || src.id == ""RemarksId"") {
            $(""#AllColumnsId"").prop(""checked"", false);
        }
        if (src.id == ""AllColumnsId"") {
            $(""#ChannelingId"").prop(""checked"", false);
            $(""#OccupiedBandwithId"").prop(""checked"", false);
            $(""#DirectionSeparationId"").prop(""checked"", false);
            $(""#TransmitPowerId"").prop(""checked"", false);
            $(""#ChannelAccessId"").prop(""checked"", false);
            $(""#AuthorisationRegimeId"").prop(""checked"", false);
            $(""#ArtRequiermentsId"").prop(""checked"", false);
            $(""#FrequencyPlanningId"").prop(""checked"", false);
            $(""#PlannedChangesId"").prop(""checked"", false);
            $(""#ReferenceId"").prop(""checked"", false);
            $(""#NotificationId"").prop(""checked"", false);
            $(""#RemarksId"").prop(""checked"", ");
            WriteLiteral("false);\r\n        }\r\n\r\n    }\r\n\r\n    function handleChangeAllocation(src) {\r\n        if (src.value == \'Hierarchical\') {\r\n\r\n             $.ajax({\r\n                            type: \"POST\",\r\n                            url: \"");
#nullable restore
#line 1116 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("OrderByHierarchicalAll"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#allc_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#allc_all"").empty();
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#allc_all"");
                                        if (generalTemp.name == ""<all allocation terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + generalTemp.Number,
                                         ");
            WriteLiteral(@"       html: ""all allocation terms""
                                            }));

                                        } else {
                                            if (generalTemp.Layer == 1) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: """" + generalTemp.name
                                                }));

                                            } else if (generalTemp.Layer == 2) {
                                                values.append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));

                                            } else {
                                                values");
            WriteLiteral(@".append($('<option>', {
                                                    value: """" + generalTemp.Number,
                                                    html: ""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"" + generalTemp.name
                                                }));
                                            }
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                                /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object ins");
            WriteLiteral(@"tead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });


        } else {
            $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 1183 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                             Write(Url.Action("OrderByAlphabeticalAll"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                            data: {
                                //FrequencyTableVal: $(""#frequency_table option:selected"").text()

                            }, success: function (response) {

                                if (Object.keys(response).length == 0) {

                                    $(""#allc_all"").empty();
                                }
                                if (Object.keys(response).length > 0) {
                                    $(""#allc_all"").empty();
                                    var increment = 0;
                                    $.each(response, function (i, generalTemp) {

                                        var values = $(""#allc_all"");
                                        if (generalTemp.name == ""<all allocation terms>"") {
                                            //alert(""postoji"");
                                            values.append($('<option>', {
                                                value: """" + increm");
            WriteLiteral(@"ent,
                                                html: ""all allocation terms""
                                            }));
                                            increment++;
                                        } else {


                                            values.append($('<option>', {
                                                value: """" + increment,
                                                html: ""<p>"" + generalTemp.name + ""</p>""
                                            }));
                                            increment++;
                                        }
                                    });
                                }

                            }
                            ,
                            failure: function (response) {
                                alert(""faliure"");
                            },
                            error: function (xhr, textStatus, exceptionThrown) {
                          ");
            WriteLiteral(@"      /*alert(""greska"");*/
                                var errorData = $.parseJSON(xhr.responseText);
                                var errorMessages = [];
                                //this ugly loop is because List<> is serialized to an object instead of an array
                                for (var key in errorData) {
                                    errorMessages.push(errorData[key]);
                                }
                                $('#error_input').html(errorMessages.join(""<br />""));
                            }
                        });

        }
    }

    $(function () {
        $('#download_pdf').click(function () {
            var selected = $(""#frequency_table :selected"").map((_, e) => e.value).get();
            $.ajax({
                type: ""POST"",
                url: """);
#nullable restore
#line 1244 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 Write(Url.Action("DownloadPDF", "Interfaces"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $(""#frequency_table option:selected"").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {

                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'pdf' });

                    // Create a temporary link element
                    var link = document.createElement('a');
                    link.href = window.URL.");
            WriteLiteral(@"createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.pdf';

                    // Programmatically trigger the download
                    link.click();


                },
                failure: function (response) {
                    alert(""Failure: An error occurred while making the AJAX request."");
                },
                error: function (response) {
                    alert(""Error: An error occurred while making the AJAX request."");
                }
            });
        });

        $('#download_excel').click(function () {
            $.ajax({
                type: ""POST"",
                url: """);
#nullable restore
#line 1288 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 Write(Url.Action("DownloadExcel", "Interfaces"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                data: {
                    FrequencySizeVal: $('#frequencySize').val(),
                    FrequencyTableVal: $(""#frequency_table option:selected"").text()
                },
                responseType: 'arraybuffer',
                success: function (response) {
                    // Create a Blob from the response data
                    var binaryString = atob(response);

                    // Convert the binary string to an ArrayBuffer
                    var arrayBuffer = new ArrayBuffer(binaryString.length);
                    var uint8Array = new Uint8Array(arrayBuffer);
                    for (var i = 0; i < binaryString.length; i++) {
                        uint8Array[i] = binaryString.charCodeAt(i);
                    }

                    // Create a Blob from the ArrayBuffer
                    var blob = new Blob([arrayBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

                    // Create a tempora");
            WriteLiteral(@"ry link element
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);

                    // Set the file name for the downloaded Excel file
                    link.download = 'freq_band.xlsx';

                    // Programmatically trigger the download
                    link.click();
                },
                failure: function (response) {
                    alert(""Failure: An error occurred while making the AJAX request."");
                },
                error: function (response) {
                    alert(""Error: An error occurred while making the AJAX request."");
                }
            });
        });
    });

</script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db53394908", async() => {
                WriteLiteral("\r\n    <div class=\"centerpanel\">\r\n        <div class=\"left\">Interfaces</div>\r\n        <div class=\"right\">\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "65f7b3652afae16f04714a4e7a00b57ca55db53395295", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
    </div>

    <br />

    <div style=""background-color: white; width: 70%; margin-top: 30px; padding-top:30px;"" class=""center"">
        <br />
        <div class=""form-group center_top_menu"" style=""width: 90%; height:100%"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db53396824", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#nullable restore
#line 1343 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.Frequency);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "65f7b3652afae16f04714a4e7a00b57ca55db53398594", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 1346 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.From);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 1346 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                                                                            WriteLiteral(TempData["fromTempValue"]);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "65f7b3652afae16f04714a4e7a00b57ca55db533101787", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 1350 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.To);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 1350 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                                                                          WriteLiteral(TempData["toTempValue"]);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p> &nbsp &nbsp</p>\r\n");
#nullable restore
#line 1353 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
             if (Model != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 1355 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 if (Model.Count() > 0)
                {
                    

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533105578", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1358 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.ElementAt(0).FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1358 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.ElementAt(0).FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1360 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                }
                else if (Model.Count() == 0)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533108260", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1363 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1363 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1365 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1365 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 

            }
            else
            {
                

#line default
#line hidden
#nullable disable
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533111163", async() => {
                    WriteLiteral("\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
#nullable restore
#line 1371 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencySizeValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1371 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.FrequencySizesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1373 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n\r\n");
                WriteLiteral(@"        </div>





        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"">Application</label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533114079", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1389 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.ApplicationFirstValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1389 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.ApplicationFirstList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533116765", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1398 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.ApplicationSecondValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1398 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.ApplicationSecondList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533119453", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1407 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.ApplicationThirdValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1407 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.ApplicationThirdList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight:bold; font-family:Roboto; font-size:13px;  width:150px;""></label>
            <p>&nbsp &nbsp</p>
            <input type=""checkbox"" id=""selectedLevel"" name=""selectedLevel"">
            <label for=""selectedLevel"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;""> Search only in the selected level</label>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; width:80%; height: 35px; text-align: center;"">-or-</label>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by");
                WriteLiteral(@""" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarcApp"" onchange=""handleChangeAppAll(this);"" value=""Hierarchical"" /> Hierarchical
            </div>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarcApp"" onchange=""handleChangeAppAll(this);"" value=""Alphabetical"" checked /> Alphabetical
            </div>
            <p> &nbsp &nbsp</p>
            <div id=""abbr""><a href=""#"" onClick=""LinkClick(); return false;"">Abbreviations</a></div>
        </div>


        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
");
                WriteLiteral("            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533123935", async() => {
                    WriteLiteral("\r\n");
                    WriteLiteral("            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
#nullable restore
#line 1444 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.ApplicationAllValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1444 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.ApplicationAllList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>


        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"">Service</label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533126577", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1455 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.AllocationFirstValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1455 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.AllocationFirstList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533129259", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1463 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.AllocationSecondValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1463 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.AllocationSecondList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533131945", async() => {
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
#nullable restore
#line 1472 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.AllocationThirdValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1472 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.AllocationThirdList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; width:80%; height: 35px; text-align: center;"">-or-</label>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarc"" onchange=""handleChangeAllocation(this);"" value=""Hierarchical"" /> Hierarchical

            </div>
            <div class=""typeHierra"">
                <input type=""radio"" name=""hierarc"" onchange=""handleChangeAllocation(this);"" value=""Alphabetical"" checked /> Alphabetical
          ");
                WriteLiteral(@"  </div>
            <p> &nbsp &nbsp</p>
            <div id=""abbr""><a href=""#"" onClick=""LinkClick(); return false;"">Abbreviations</a></div>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px""></label>
            <p> &nbsp &nbsp</p>
");
                WriteLiteral("            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533135910", async() => {
                    WriteLiteral("\r\n                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533136196", async() => {
                        WriteLiteral("&lt;all allocation terms &gt;");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_33.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_33);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
#nullable restore
#line 1501 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.AllocationAllValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1501 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.AllocationAllList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%;"">

            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px"">Notification</label>
            <p> &nbsp &nbsp</p>
            <input type=""text"" id=""notification_value"" style=""width: 80%; height: 35px; font-weight: bold; font-family: Roboto; font-size: 13px; border-style: solid;"">
            </input>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height: 100%; margin-top: -20px;"">
            <label id=""ffff"" style=""font-weight: bold; font-family: Roboto; font-size: 13px;  width:150px; height:10px;""></label>
            <p> &nbsp &nbsp</p>
            <label for=""selectedLevel"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;"">Use % as wildcard</label>
        </div>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533140583", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
#nullable restore
#line 1521 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencyTable);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            <p>&nbsp &nbsp</p>\r\n\r\n\r\n\r\n");
#nullable restore
#line 1526 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
             if (Model != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 1528 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 if (Model.Count() > 0)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533143038", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
#nullable restore
#line 1531 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1531 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.ElementAt(0).FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1533 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                }
                else if (Model.Count() == 0)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533145897", async() => {
                    WriteLiteral("\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
#nullable restore
#line 1537 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1537 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1539 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1539 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                 
            }
            else
            {


#line default
#line hidden
#nullable disable
                WriteLiteral("                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65f7b3652afae16f04714a4e7a00b57ca55db533148960", async() => {
                    WriteLiteral("\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
#nullable restore
#line 1545 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => interfacesService.FrequencytableValue);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 1545 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = interfacesService.FrequencyTablesList;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 1547 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"

        </div>
        <div>
            <label for=""selectedColumns"" style=""font-weight: bold; font-family: Roboto; font-size: 13px; color: black; padding-top:5px;"">Selected Columns</label>
        </div>
        <div>
            <input type=""checkbox"" id=""AllColumnsId"" name=""source"" value=""AllColumns"" onclick=""handleClickCheckBox(this);"">
            <label for=""AllColumnsId"">All columns</label>
        </div>

        <div>
            <input type=""checkbox"" id=""ChannelingId"" name=""source"" onclick=""handleClickCheckBox(this);"" value=""Channeling"">
            <label for=""ChannelingId"">Channeling</label>
            <input type=""checkbox"" id=""OccupiedBandwithId"" name=""source"" onclick=""handleClickCheckBox(this);"" value=""OccupiedBandwith"">
            <label for=""OccupiedBandwithId"">Occupied bandwith</label>
            <input type=""checkbox"" id=""DirectionSeparationId"" name=""source"" value=""DirectionSeparation"" onclick=""handleClickCheckBox(this);"">
            <label for=""DirectionSeparationI");
                WriteLiteral(@"d"">Direction / Separation</label>
            <input type=""checkbox"" id=""TransmitPowerId"" name=""source"" value=""TransmitPower"" onclick=""handleClickCheckBox(this);"">
            <label for=""TransmitPowerId"">Transmit Power</label>
            <input type=""checkbox"" id=""ChannelAccessId"" name=""source"" value=""ChannelAccess"" onclick=""handleClickCheckBox(this);"">
            <label for=""ChannelAccessId"">Channel access</label>
            <input type=""checkbox"" id=""AuthorisationRegimeId"" name=""source"" value=""AuthorisationRegime"" onclick=""handleClickCheckBox(this);"">
            <label for=""AuthorisationRegimeId"">Authorisation regime</label>
            <input type=""checkbox"" id=""ArtRequiermentsId"" name=""source"" value=""ArtRequierments"" onclick=""handleClickCheckBox(this);"">
            <label for=""ArtRequiermentsId"">Art 3.3 requierments</label>
            <input type=""checkbox"" id=""FrequencyPlanningId"" name=""source"" value=""FrequencyPlanning"" onclick=""handleClickCheckBox(this);"">
            <label for=""Freque");
                WriteLiteral(@"ncyPlanningId"">Frequency planning</label>
            <input type=""checkbox"" id=""PlannedChangesId"" name=""source"" value=""PlannedChanges"" onclick=""handleClickCheckBox(this);"">
            <label for=""PlannedChangesId"">Planned changes</label>
            <input type=""checkbox"" id=""ReferenceId"" name=""source"" value=""Reference"" onclick=""handleClickCheckBox(this);"">
            <label for=""ReferenceId"">Reference</label>
            <input type=""checkbox"" id=""NotificationId"" name=""source"" value=""Notification"" onclick=""handleClickCheckBox(this);"">
            <label for=""NotificationId"">Notification #</label>
            <input type=""checkbox"" id=""RemarksId"" name=""source"" value=""Remarks"" onclick=""handleClickCheckBox(this);"">
            <label for=""RemarksId"">Remarks</label>

        </div>
        <br />

        <br />
        <p>&nbsp &nbsp</p>

        <div class=""center_top_menu"" style=""width: 50%; height:100%"">
            <label id=""search_by"" style=""font-weight: bold; font-family: Roboto; font");
                WriteLiteral(@"-size: 13px; width:150px;""></label>
            <button type=""submit"" id=""searh_now"" class=""btn btn-primary"" style=""width: 40%; background-color: darkseagreen;"" onclick=""RunSearch()"">Search</button>
        </div>
        <br />
        <p>&nbsp &nbsp</p>

    </div>
    <br />

    <br />
    <div id=""print_div"" class=""center""");
                BeginWriteAttribute("style", " style=\"", 82981, "\"", 83038, 1);
#nullable restore
#line 1602 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
WriteAttributeValue("", 82989, showDiv ? "display: block;" : "display: none;", 82989, 49, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
        <div class=""center_top_menu center"" style=""width: 40%; height:100%"">
            <button type=""submit"" id=""download_excel"" class=""btn btn-secondary center"" style=""width: 50%; background-color: limegreen; margin: 5px;"">
                <i class=""fas fa-file-excel""></i>Download Excel
            </button>
            <button type=""submit"" id=""download_pdf"" class=""btn btn-secondary center"" style=""width: 50%; background-color: red; margin: 5px;"">
                <i class=""fas fa-file-pdf""></i> Download PDF
            </button>
        </div>
    </div>
    <br />

    <p id=""docsHidden"" style=""visibility:hidden;""></p>
    <div id=""rData"" class=""center"">
");
#nullable restore
#line 1616 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
         if (Model != null)
        {
            

#line default
#line hidden
#nullable disable
#nullable restore
#line 1618 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
             if (Model.Count() > 0)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                <table class='table table-sm table-striped table-hover border-bottom' style='width:80%; background-color: white;'>
                    <tr>
                        <th style=""text-align:center"">Country</th>
                        <th>Radiocommunication Service</th>
                        <th>Application</th>
                        <th>Frequency band</th>
                        <th>Channeling</th>
                        <th>Occupied bandwidth</th>
                        <th>Direction / Separation</th>
                        <th>Transmit Power</th>
                    </tr>
");
#nullable restore
#line 1631 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                     foreach(FrekvencijeProject.Models.Interfaces.InterfacesView i in Model)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <tr>\r\n                    <td style=\"width:100px;\">\r\n                        ");
#nullable restore
#line 1635 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.Country);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:200px;\">\r\n                        ");
#nullable restore
#line 1638 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.RadiocommunicationService);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:100px;\">\r\n                        ");
#nullable restore
#line 1641 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.Application);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:100px;\">\r\n                        ");
#nullable restore
#line 1644 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.FrequencyBand);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:100px;\">\r\n                        ");
#nullable restore
#line 1647 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.Channeling);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:200px;\">\r\n                        ");
#nullable restore
#line 1650 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.OccupiedBandwidth);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:200px;\">\r\n                        ");
#nullable restore
#line 1653 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.DirectionSeparation);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </td>\r\n                    <td style=\"width:350px;\">\r\n                        ");
#nullable restore
#line 1656 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                   Write(i.TransmitPower);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n");
#nullable restore
#line 1657 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                         if (i.Notes != "")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <a");
                BeginWriteAttribute("onclick", " onclick=\"", 85580, "\"", 85629, 5);
                WriteAttributeValue("", 85590, "PresentNotes(\'", 85590, 14, true);
#nullable restore
#line 1659 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
WriteAttributeValue("", 85604, i.Notes, 85604, 8, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 85612, "\');", 85612, 3, true);
                WriteAttributeValue(" ", 85615, "return", 85616, 7, true);
                WriteAttributeValue(" ", 85622, "false;", 85623, 7, true);
                EndWriteAttribute();
                WriteLiteral(">");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "65f7b3652afae16f04714a4e7a00b57ca55db533162346", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("</img></a>\r\n");
#nullable restore
#line 1660 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"

                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </td>\r\n                    \r\n\r\n                </tr>\r\n");
#nullable restore
#line 1666 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("                </table>\r\n");
#nullable restore
#line 1668 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"

            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 1669 "C:\Users\Dušan\Desktop\FREELANCE\FrekvencijaProjekat\frekvencija_project\FrekvencijeProject\Views\Interfaces\Index.cshtml"
             
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_42);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public FrekvencijeProject.Controllers.InterfacesController interfacesService { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<FrekvencijeProject.Models.Interfaces.InterfacesView>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
