// <auto-generated />
using System;
using FrekvencijeProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FrekvencijeProject.Migrations.AllocationDB
{
    [DbContext(typeof(AllocationDBContext))]
    [Migration("20220718114650_AddNewTablesAllocation")]
    partial class AddNewTablesAllocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.AllocationDb", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllocationRangeId")
                        .HasColumnType("int");

                    b.Property<int?>("AllocationTermId")
                        .HasColumnType("int");

                    b.Property<bool>("primary")
                        .HasColumnType("bit");

                    b.HasKey("AllocationId");

                    b.HasIndex("AllocationRangeId");

                    b.HasIndex("AllocationTermId");

                    b.ToTable("AllocationDb");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.AllocationRangeDb", b =>
                {
                    b.Property<int>("AllocationRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RootAllocationDBId")
                        .HasColumnType("int");

                    b.Property<long>("high")
                        .HasColumnType("bigint");

                    b.Property<long>("low")
                        .HasColumnType("bigint");

                    b.HasKey("AllocationRangeId");

                    b.HasIndex("RootAllocationDBId");

                    b.ToTable("AllocationRangeDb");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.AllocationTermDb", b =>
                {
                    b.Property<int>("AllocationTermId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllocationTermId");

                    b.ToTable("AllocationTermDb");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.FootnoteAllocation", b =>
                {
                    b.Property<int>("FootnoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllocationId")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FootnoteId");

                    b.HasIndex("AllocationId");

                    b.ToTable("FootnoteAllocation");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.RootAllocationDB", b =>
                {
                    b.Property<int>("RootAllocationDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("regionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("regionId")
                        .HasColumnType("int");

                    b.Property<string>("regionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RootAllocationDBId");

                    b.ToTable("RootAllocationDB");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.AllocationDb", b =>
                {
                    b.HasOne("FrekvencijeProject.JSON.Allocations.AllocationRangeDb", "allocationRangeDb")
                        .WithMany("allocationsDb")
                        .HasForeignKey("AllocationRangeId");

                    b.HasOne("FrekvencijeProject.JSON.Allocations.AllocationTermDb", "allocationTerm")
                        .WithMany()
                        .HasForeignKey("AllocationTermId");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.AllocationRangeDb", b =>
                {
                    b.HasOne("FrekvencijeProject.JSON.Allocations.RootAllocationDB", "rootAllocation")
                        .WithMany("allocationRanges")
                        .HasForeignKey("RootAllocationDBId");
                });

            modelBuilder.Entity("FrekvencijeProject.JSON.Allocations.FootnoteAllocation", b =>
                {
                    b.HasOne("FrekvencijeProject.JSON.Allocations.AllocationDb", "allocation")
                        .WithMany("footnotes")
                        .HasForeignKey("AllocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
