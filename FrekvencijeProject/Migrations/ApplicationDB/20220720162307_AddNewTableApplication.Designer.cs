// <auto-generated />
using System;
using FrekvencijeProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FrekvencijeProject.Migrations.ApplicationDB
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220720162307_AddNewTableApplication")]
    partial class AddNewTableApplication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FrekvencijeProject.Models.Application.ApplicationDB", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationRangeId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationTermId")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("ApplicationRangeId");

                    b.HasIndex("ApplicationTermId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("FrekvencijeProject.Models.Application.ApplicationRangeDB", b =>
                {
                    b.Property<int>("ApplicationRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RootApplicationDBId")
                        .HasColumnType("int");

                    b.Property<long>("high")
                        .HasColumnType("bigint");

                    b.Property<long>("low")
                        .HasColumnType("bigint");

                    b.HasKey("ApplicationRangeId");

                    b.HasIndex("RootApplicationDBId");

                    b.ToTable("ApplicationRange");
                });

            modelBuilder.Entity("FrekvencijeProject.Models.Application.RootApplicationDB", b =>
                {
                    b.Property<int>("RootApplicationDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("regionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("regionId")
                        .HasColumnType("int");

                    b.Property<string>("regionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RootApplicationDBId");

                    b.ToTable("RootApplicationDB");
                });

            modelBuilder.Entity("FrekvencijeProject.Models.Application.RootApplicationTermsDB", b =>
                {
                    b.Property<int>("ApplicationTermsDBId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationTermsDBId");

                    b.ToTable("RootApplicationTermsDB");
                });

            modelBuilder.Entity("FrekvencijeProject.Models.Application.ApplicationDB", b =>
                {
                    b.HasOne("FrekvencijeProject.Models.Application.ApplicationRangeDB", "applicationRange")
                        .WithMany("applicationDb")
                        .HasForeignKey("ApplicationRangeId");

                    b.HasOne("FrekvencijeProject.Models.Application.RootApplicationTermsDB", "applicationTerm")
                        .WithMany()
                        .HasForeignKey("ApplicationTermId");
                });

            modelBuilder.Entity("FrekvencijeProject.Models.Application.ApplicationRangeDB", b =>
                {
                    b.HasOne("FrekvencijeProject.Models.Application.RootApplicationDB", "RootApplication")
                        .WithMany("applicationRanges")
                        .HasForeignKey("RootApplicationDBId");
                });
#pragma warning restore 612, 618
        }
    }
}
